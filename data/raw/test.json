[
    {
        "_id": "64e08932b72e199dda6040c0",
        "title": "Awesome Themes for Visual Studio Code",
        "content": "ode Visual Studio Code is by far one of the most popular code editors for web, mobile, and hardware developers. More than ,, people use VS Code every month, up by over % in the last year. Here are three awesome VS Code themes you can start using today. Shades of Purple !_mYpUlWTICuJWbXNNVqdw A professional theme with hand-picked & bold shades of purple for your VS Code editor and terminal. One of the excellent most downloaded and top rated VS Code Themes on the marketplace. Installation Open the extensions sidebar on Visual Studio Code Search for Shades of Purple Theme Click Install to install it. Click Reload to reload your editor. Code/File  Preferences  Color Theme  Shades of Purple. One Dark Pro !_AzJLeMEPjbcVO_dqpDwGw Atoms iconic One Dark theme, and one of the most installed themes for VS Code! One Dark Pro is based on Atoms default One Dark theme, and is one of the most downloaded themes for VS Code. Installation Open the extensions sidebar on Visual Studio Code Search for One Dark Pro Click Install to install it. Click Reload to reload your editor. Code/File  Preferences  Color Theme  One Dark Pro. Dracula !_oK-ziaotvrYzMDlFnzg Dracula is a color scheme and UI theme tailored for programming. Made for terminal emulators, code editors, and syntax highlighters. Designed to be aesthetically pleasing while keeping you focused. Installation Open the extensions sidebar on Visual Studio Code Search for Dracula Click Install to install it. Click Reload to reload your editor. Code/File  Preferences  Color Theme  Dracula. If you know and use another awesome theme that developers would like, please share it in the comment box :)",
        "__v": 0
      },
      {
        "_id": "64e08932b72e199dda6040c2",
        "title": "Top  Websites to Learn Coding for Free in",
        "content": "e in Learning to code has grown over the years from just a hobby to a career. Today, you can learn coding online, entirely for free. Gone are the days where knowing a programming language was reserved for the select few or cost quite a hefty amount of money. Even if you have no desire to go into the development field, learning a programming language can be very beneficial: Itll help you better manage websites Itll reduce reliance on an outside developer for your own projects Itll give you the freedom to build apps, websites, and other projects with ease Whether you want to start your own career as a programmer, learn how to build websites, or create projects for fun, this post is for you. Here are some of the Websites to Learn Coding for Free Plural Sight !Plural Sight Plural Sight, formally known as Code School, is an online learning platform that offers both free and paid courses. The platform is organized into different learning paths and defined by languages and skills. Their approach to education is laid out as follows: You choose your education path thats created by professional instructors and work through the material. You practice what youve learned directly in your browser window and get immediate feedback. You rack up points as you complete each course level. You monitor your progress and keep track of all your achievements, badges earned, and material consumed. BitDegree !BitDegree BitDegree offers a ton of free courses that range from programming to game development. They offer standard online courses and gamified courses. Gamified courses help to bring achievements and interaction into the learning process. All you have to do is choose your language and start learning. BitDegree also does something unique by incorporating blockchain into the education process. There are transparent rewards and an achievement system that helps businesses recruit tech talent and measure course success. Edabit !Edabit Edabit takes a slightly different approach to learn to code. Instead of coding tutorials or courses where you watch a video and then try to repeat it yourself, Edabit offers bite-sized challenges so that you can practice your abilities. Simply register for the free site and access the online challenges immediately. You can choose your level from very easy to expert. The Shuffle page generates a random unsolved challenge for you right away. Spending an hour of coding on this website will quickly turn into hours. Hackr.io !Hackr.io Right away, you can see that Hackr.io has numerous programming languages you can learn. After selecting the course you want to take, it will first direct you to a list of tutorials where you will be able to filter the course to your liking. You can select free or paid, as well as beginner or advanced, and in which language you would like to be taught. In addition, Hackr.io has a Blog giving tips on different coding languages as well as answering questions their users ask. Plus, the Roadmaps section takes you on a recommended learning path for you to learn the right skills in a structured manner. Roadmaps helps people who have no idea where to start to achieve their goal. WSchools !WSchools WSchools come equipped with coding tutorials, resources, examples, and exercises to help you learn to code. Their slogan is The Worlds Largest Web Developer Site, and it doesnt disappoint. Start by choosing the programming language of your choice. Then either jump right into the program or select from different learning options. You can begin with a short quiz to see how much you already know and where a good place to start would be. Or jump right in and test yourself with short examples and reviewing exercises. Conclusion Learning to code used to mean hours and hours of expensive education. But, with all of the free coding resources available today, you can learn to program in record time, with zero money up-front. Of course, there is a multitude of paid programs and courses available as well. But the free resources are more than enough to get you started and develop the foundational knowledge to succeed as a programmer. You dont have to go through every single course or program on the list above, but instead, pick the ones that seem the most exciting and dive in. These are the Websites to Learn Coding for Free, If you have any questions, tips, or tricks about code learning? Share them with others in the comments below.",
        "__v": 0
      },
      {
        "_id": "64e08932b72e199dda6040c4",
        "title": "Here's why software engineers choose Linux over Windows for programming",
        "content": "ing undefined",
        "__v": 0
      },
      {
        "_id": "64e08932b72e199dda6040c6",
        "title": "Useful JavaScript Tips That'll Help You Save Time",
        "content": "e Time JavaScript is a programming language used primarily by Web browsers to create a dynamic and interactive experience for the user. Most of the functions and applications that make the Internet indispensable to modern life are coded in some form of JavaScript. While JavaScript is not the only client-side scripting language on the Internet, it was one of the first and it is still the most widely used. Many developers believe that JavaScript is inefficient and finicky, so they have made many improvements to the language over the years. Here are the JavaScript tricks that makes you a JavaScript pro Use logical AND / OR for conditions  Avoid using for loop for arrays Instead of using  It is better to use  Empty an array  Generate an array of numbers with numbers from to max ```javascript var someArray = [] , max = ; for( var i=; someArray.push(i++) ",
        "__v": 0
      },
      {
        "_id": "64e08932b72e199dda6040c8",
        "title": "What is MongoDB and Why it is the most popular Database today?",
        "content": "ay? What is MongoDB MongoDB is a document-oriented NoSQL database for storing large amounts of data. MongoDB uses collections and documents instead of tables and rows, as in traditional relational databases. MongoDB is a database that first appeared in the mid-s. The NoSQL database is a replacement for traditional SQL databases, and it includes almost all of the functionality found in RDBMS (Relational Database Management Systems) systems. Due to its simple architecture, support for both horizontal and vertical scalability, and easy and simple control over the data, NoSQL databases have grown considerably more popular in recent years than in the past. It allows programmers to store data in the database according to their program's real requirements. We can't get this kind of functionality with a standard RDBMS database. !How MongoDB works MongoDB vs SQL Databases The way MongoDB and SQL Databases manage data is the most significant distinction between them. In SQL databases, data is stored in form of traditional dimensional row-column structure while in MongoDB rich data document model is followed, which allows storage of any type of data. Here is also some other key differences between MongoDB and other SQL databases : SQL Database NoSQL Database (MongoDB) Relational database Non-relational database Supports SQL query language Supports JSON query language Table based Collection based and key-value pair Row based Document based Column based Field based Vertically scalable - increasing RAM Horizontally scalable - add more servers Contains schema which is predefined Contains dynamic schema Not fit for hierarchical data storage Best fit for hierarchical data storage Advantages of MongoDB - When compared to relational databases, performance tweaking is a breeze. - Very easy to scale. - Because it is a NOSQL database, it is inherently secure because no SQL injection can be performed. - The document query language supported by MongoDB plays a vital role in supporting dynamic queries. - MongoDB does not need the use of a virtual machine. - Due to the fact that it stores data in internal memory, it allows for quicker data access. - There is no requirement to relate application objects to data objects. - MongoDB may also be utilised as a file system, which makes load balancing much easier. - There is a substantial quantity of documentation accessible. what makes MongoDB popular? High Performance : At any size, NoSQL (MongoDB) databases are designed to offer excellent performance in terms of both throughput and latency. Flexible Data Model : The document data format in MongoDB makes it simple to store and aggregate data of any type without sacrificing complex validation rules, data access, or extensive indexing capability. Set of Integrated Features : Analytics, text search, geolocation, in-memory performance,data visualization, and global replication enable you to reliably and securely provide a wide range of real-time applications on a single platform. To accomplish this successfully, RDBMS systems necessitate extra, sophisticated technologies that necessitate separate integration overhead and expenditure. Lower TCO : MongoDB allows application development teams to be more productive. The fact that management is as simple as clicking a button means that operations teams are as well. MongoDB operates on commodity hardware, cutting expenses significantly. Scalability across several datacenters : MongoDB can be scaled both within and beyond geographically distant data centres, bringing new levels of availability and scalability to the table. MongoDB grows quickly with minimal downtime or changes to your application as your deployments grow in terms of data volume and performance. MongoDB offers affordable yearly subscriptions that include worldwide support hours a day, seven days a week, days a year. When compared to utilising a relational database, your applications may be delivered at a tenth of the cost. Companies that use MongoDB Adobe, Buzzfeed, Comcast, Cisco, CodeAcademy, Craigslist, Ebay, EA, E-Harmony, Forbes, Google, Foursquare, IBM, Infosys, and the UK Government are just a few of the companies that utilise MongoDB. Courses Here are some great courses that helps you learn MongoDB faster MongoDB - The Complete Developer's Guide The Complete Developers Guide to MongoDB Complete MongoDB Administration Guide",
        "__v": 0
      },
      {
        "_id": "64e08932b72e199dda6040ca",
        "title": "How To Install Node.js and NPM on Ubuntu",
        "content": "ntu Introduction Node.js is an open-source, JavaScript runtime environment on Chromes V that lets you effortlessly develop fast and scalable web applications. It utilises an event-driven, non-blocking I/O model that makes it lightweight, efficient and excellent for data-intensive real-time applications that run across shared devices. Installation The easiest way to install Node.js and npm on Ubuntu is using Ubuntu repository, To install the Node.js and npm from the Ubuntu repository open terminal (Ctrl + Alt + T) and run the following commands   The above command will install a number of packages in order to compile and install native addons from npm. Once it is done verify the installation by running :   In output you should see the Node.js and NPM version respectively. Uninstall Node.js Sometimes, you may want uninstall Node.js. You can do that simply by running the below commands on your terminal.   Conclusion That is it, In this article we learned, What is Node.js How to install Node.js using Ubuntu repository How to install NPM using Ubuntu repository How to uninstall Node.js. I hope you found this articles helpful. If you need any help please let me know at comment section Let's connect on Twitter and LinkedIn Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08932b72e199dda6040cc",
        "title": "Easy Ways To Make Money As A Developer",
        "content": "loper In this article, Ill show you easy ways to make money as a developer. Freelancing For many developers, freelancing is profitable source of income. Some people take it as a full-time job, while others do it as a part-time job to earn additional cash. Some platforms like Fiverr, Upwork, and many more offer a great opportunity for anyone to start freelancing, but there is a lot of competition there, so be sure to stand out among them !image ().png Sell an Ebook Writing an ebook is one of those things that may pay off for a long time. You can write a highly useful ebook as a developer that covers a certain topic of software development. Alternatively, you may opt to describe a programming language in such a way that your readers will have a better understanding of it. Writing books is also a wonderful method to build your brand and demonstrate your expertise in the area. Once you have completed writing you Ebook, You can start selling it online !image ().png Teach People Teaching other people how to code is the greatest and possibly easiest method to generate money as a developer. You may accomplish this in a variety of ways. The first is to develop and market online course.You may offer courses on your own website or on sites like Udemy and Pluralsight. You can also teach people individually, that can be online or in person. If you teach people in this way, youll earn a lot more money. !image ().png Sell Templates Selling templates is another way to generate money. You may accomplish this by visiting websites such as Themeforest, where anybody can sell their designs for a nominal charge each transaction. Selling online courses is quite similar to this. !image ().png Application Development As a developer, you may put your coding abilities to use by creating and selling computer and mobile applications. With a solid understanding of Swift, JavaScript Objective-C, you can quickly create a useful iOS application. You may profit from it by releasing it on the app store for anybody to download and purchase. !image ().png Conclusion These are many other ways that you can use to make money as a developer. These are not all the ways that exist, but these are the most easiest ones. I hope you found this articles helpful. If you need any help please let me know at comment section Let's connect on Twitter and LinkedIn Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08932b72e199dda6040ce",
        "title": "Find Social Media Accounts in  Minutes with Sherlock",
        "content": "lock Disclaimer Don't do this to anyone with ill intent, this is a legit hacking tool part of the hacking process called osens, where we gather information about our hacking targets. What we're doing is not technically illegal we're just gathering publicly available information on the internet but the lines can blur based on your intentions so just be careful use this as a learning tool. Introduction Sherlock is a powerful command line tool supplied by the Sherlock Project that may be used to locate usernames across a variety of social media platforms. It is a python open-source project available at GitHub. You just need to input the username and Sherlock will return all the social media account url of that username Requirement This best thing about this project is that you don't need any extra thing, You just need a web browser How To Use ? - Open this link in your browser. This will open Google Cloud Console which we can use its shell to install Sherlock - Make sure to check the Trust checkbox and click on Confirm and wait for seconds !screely-.png - Once everything is done, go a head and paste the below code in the Cloud Shell  - If all the packages are installed successfully, you should see something similar to below picture !image ().png - Now we can start using Sherlock, you just need to a username to get the social media account. In the Cloud Shell paste the below code and click enter ( change username with the account you want to get information, In my case suhailkakar) and will get all the social media profile of the username  !Sherlock Conclusion I hope you found this articles helpful. If you need any help please let me know at comment section Let's connect on Twitter and LinkedIn Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08932b72e199dda6040d0",
        "title": "Best Design Resources for Developers",
        "content": "ers Are you searching for the best design resources? This is a collection that every developer should bookmark since it contains the greatest resources for creating an eye-catching and aesthetically enhanced project. Introduction Every developer's job entails some kind of product design. It's not just about having a good appearance; it's also about having engaging visuals and a good overall presentation. Rather of spending time and money on a lengthy design process, it is preferable to leverage resources that offer ready-to-use components and features for a fantastic, amazing, and outstanding product. Table of Contents - UI Graphics - Fonts - Colors - Icons - Logos - Favicons - Icon Fonts - Stock Photos - Stock Videos - Stock Music & Sound Effects - Vectors & Clipart - Product & Image Mockups - HTML & CSS Templates - CSS Frameworks - CSS Methodologies - CSS Animations - Javascript Animations - Javascript Charts - UI Components & Kits - React UI Libraries - Vue UI Libraries - Angular UI Libraries - Svelte UI Libraries - React Native UI Libraries - Design Systems & Style Guides - Online Design Tools - Downloadable Design Software - Design Inspiration - Image Compression - Chrome Extensions - Others UI Graphics  Back To Top Fonts  Back To Top Colors  Back To Top Icons  Back To Top Logos  Back To Top Favicons  Back To Top Icon Fonts  Back To Top Stock Photos  Back To Top Stock Videos  Back To Top Stock Music & Sound Effects  Back To Top Vectors & Clip Art  Back To Top Product & Image Mockups  Back To Top HTML & CSS Templates  Back To Top CSS Frameworks  Back To Top CSS Methodologies  Back To Top CSS Animations  Back To Top Javascript Animation Libraries  Back To Top Javascript Chart Libraries  Back To Top UI Components & Kits  Back To Top React UI  Back To Top Vue UI  Back To Top Angular UI  Back To Top Svelte UI  Back To Top React Native UI  Back To Top Design Systems & Style Guides  Back To Top Online Design Tools  Back To Top Downloadable Design Software  Back To Top Design Inspiration  Back To Top Image Compression  Back To Top Chrome Extensions  Back To Top Others  Back To Top Conclusion I hope you found this list helpful. If you need any help please let me know at comment section Let's connect on Twitter and LinkedIn Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08932b72e199dda6040d2",
        "title": "Typescript vs Javascript : Which one should you use for your next project ?",
        "content": "t ? Introduction JavaScript is a scripting language for building dynamic web pages. It adhered to client-side development principles, thus it operates entirely within the user's web browser and requires no resources from the web server. Javascript may also be used with other technologies such as REST APIs, XML, and others. Typescript is a superset of Javascript. It is a statically built language for writing Javascript code that is straightforward and simple. It may be used with Node.js or any browser that supports ECMAScript or above. Difference Between Javascript and Typescript Typescript Javascript To make the code comprehensible for browsers, it will convert to JavaScript code. Can be directly used in browsers There is support for ES, ES, ES and ES No support for compiling additional ES, ES, ES or ES features During the compilation process, errors can be identified and rectified. Because it is an interpreted language, errors can only be discovered during runtime. Since it is a superset, all the JavaScript libraries, and other JavaScript code works without any changes JS libraries work by default Functions can have optional parameters This feature is not possible in JavaScript Numbers, Strings are considered as interfaces. Number, string are objects. Powerful and intuitive language Neat and clean, most suitable for simple web applications Supports modules, generics and interfaces to define data No support for modules, generics or interface The community support is still growing and not so huge Huge community support, including extensive documentation and assistance in resolving issues. Prototyping is possible Prototyping support is not there Takes time to learn and code, scripting knowledge is a must. Can be learned on the go, no prior scripting experience is needed. Features of Javascript - It's utilised on both the client and server sides. - It's simple to learn and use, and it's a cross-platform language. - Strong Testing Workflow - It's a dynamic language: flexible and powerful Features of Typescript - It's a dynamic language that's both versatile and strong. - Offered great productivity for developers & Maintainability - Code 'discoverability' & refactoring - Optional Static Type Annotation / Static Typing Which one is better ? JavaScript is excellent for experienced developers working on relatively small coding tasks. However, if you have a development team with experience and understanding, Typescript is the best alternative. Conclusion I hope you found this article helpful. If you need any help please let me know in comment section Let's connect on Twitter and LinkedIn Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08932b72e199dda6040d4",
        "title": "Introducing Tomorrow - A New Look for Your Code Editor",
        "content": "tor Introduction Visual Studio Code is by far one of the most popular code editors for web, mobile, and hardware developers. More than ,, people use VS Code every month, up by over % in the last year. A week ago I have created my own theme ( Tomorrow ), This theme was inspired by One Dark Pro and Material Theme. !Screenshot_--_--.png Installation Open Extensions sidebar panel in VS Code. `View  Extensions` Search for `Tomorrow` - find the one by Suhail Kakar Click Install to install it. Code > Preferences > Color Theme > Tomorrow Recommended Settings If you want to give the same look as the above picture for your Code Editor you need to paste the below code into your VS Code Settings JSON  Font Cascadia Code font is recommended, This font was created by Microsoft and available publicly on GitHub. You can download the font here Conclusion If you like this theme, be sure to give it a start on Github. I hope you found this article helpful. If you need any help please let me know in the comment section Let's connect on Twitter and LinkedIn Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08933b72e199dda6040d6",
        "title": "Let's Create A Youtube Clone Using React Native  - Part",
        "content": "art Introduction YouTube is a free video-sharing website that makes watching video clips easy. You may even make your own videos and post them to enjoy with others. YouTube, which was founded in , is currently one of the most popular apps on the Internet, with over billion hours of video watched each month. React Native is a JavaScript framework for writing real, natively rendering mobile applications for iOS and Android. Its based on React, Facebooks JavaScript library for building user interfaces, but instead of targeting the browser, it targets mobile platforms. Table of Contents In this part () we are going to - Download and Install Node JS - Install Expo CLI - Initialize our app with React Native Expo - Change Folder Structure - Create a bottom Tab navigation Installing Node JS Node.js is a platform built on Chrome's JavaScript runtime for easily building fast and scalable network applications. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient, perfect for data-intensive real-time applications that run across distributed devices. Go to nodejs.org and download and install the latest stable version (LTS) on your computer. \"nodejs package includes both node and npm\" !frame_chrome_mac_light ().png Installing Expo Expo is a framework and a platform for universal React applications. It is a set of tools and services built around React Native and native platforms that help you develop, build, deploy, and quickly iterate on iOS, Android, and web apps from the same JavaScript/TypeScript codebase. The quickest way to install Expo is using NPM, just open your terminal and write  !frame_chrome_mac_light ().png Initializing our app with React Native Expo Open your terminal and write  This will generate a simple one-screen app using React Native. Once your app is created, navigate to your app folder using  and run  On your phone, download and install Expo Go app, after installing open it and press \"Scan QR Code\" on the \"Projects\" tab of the Expo Go app and scan the QR code you see in the terminal or in Expo Dev Tools. Changing Folder Structure Now, Let's change the folder structure of our app. First, you need to create the `src` folder in your main directory, then create the `components` folder inside of `src`, similarly, create the `utils` and `screens` folder too. Inside of the `assets` folder create two new folders, i.e `fonts` and `images`. Finally you folder structure should look like this.  Creating a bottom Tab Now We need to create a bottom tab just like youtube, but first, you need to install react-native-paper, for that paste the command below in your terminal  React Native Paper is a collection of customizable and production-ready components for React Native, following Googles Material Design guidelines. Once it is done, in your component folder, create a file named `bottomTab.js` and import it in your `app.js`. Now paste the below code in your `bottomTab.js`  and this is how your `app.js` should look  Now when you save your code you should see the output similar to a GIF below Conclusion This is it for this part. I hope you found this article helpful. If you need any help please let me know in the comment section Let's connect on Twitter and LinkedIn Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08933b72e199dda6040d8",
        "title": "Integrate Twilio With Node JS - A Beginner's Guide",
        "content": "ide Introduction Node.js is an open-source, JavaScript runtime environment on Chromes V that lets you effortlessly develop fast and scalable web applications. It utilizes an event-driven, non-blocking I/O model that makes it lightweight, efficient, and excellent for data-intensive real-time applications that run across shared devices. Twilio Verify is a comprehensive solution for validating end-user phone numbers, which will be used to deliver a numeric code to the Android / iOS app through text message. Our server app will sit in between our app and Verify, allowing us to verify a user's phone number once they sign up for your mobile app. In this article, we are going to integrate Twillio SMS Verify API in Node JS. Initializing Our Node JS Server The first step is to create our Node JS server, to do that, open your terminal and write  Now you should see a `package.json` in your project's folder, now go ahead and create a new file named `server.js`. This is the main file for our server, To get our server up and running, you need to paste the below code. !Node Simple App The above code is a simple node and express app. Now in your terminal run  Open your web browser and go to localhost:, you should see a simple GET response, similar to the below image !screely-.png Now, we got our Node & Express server running, it is time to integrate Twilio Twilio Keys In order to make our APIs up and running with Twilio, we need keys that we can get from Twilio Dashboard. Go to the Twilio console and you can find keys (ACCOUNT SID, AUTH TOKEN) These keys are used as an Authentication between our app and Twilio. Copy both keys and save them in a variable. !screely-.png The next key is your service ID, to get that go here and copy your service ID, if you don't have any service you can create it by clicking on the big blue button !screely-.png Integrating Twilio with Node JS Now we need to create two APIs First we need to create an API that sends verify code to Phone Number To verify the Phone number with the verification code we need to create the second API Before starting the integration we need to install Twilio module in our Node JS app to do that simple paste the below code in your terminal  and import the module in the `server.js` just like the below code.  Now in your `server.js` paste the below code. This snippet is to send verification code to our phone number !raycast-untitled ().png The above API takes two params, phone number, and channel. In channel, you can either use SMS or call. It is simply the way which you will receive the verification code. Now it is time to create our second API which verifies the code. Below API take two params \"phone number and code\" !raycast-untitled ().png Paste the above code too in your `server.js` and that is it. Finally, your `server.js` should look similar to the below image !raycast-untitled ().png You can find the whole source code in my GitHub repo here Testing API in Postman Open Postman desktop and test the APIs, for the first API pass phone number and channel as params and click on send you should see an output similar to the below image !screely-.png Now check the phone number which you have given in params, you should receive a code to verify your phone number. You can verify the code using the other API Conclusion In this article, we have learned - What is Node JS - What is Twilio - How to initialize a Node JS app - How to Integrate Twilio Verify API with Node JS I hope you found this article helpful. If you need any help please let me know in comment section Let's connect on Twitter and LinkedIn Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08933b72e199dda6040da",
        "title": "Best Courses to Learn React Native For Free",
        "content": "Free undefined",
        "__v": 0
      },
      {
        "_id": "64e08933b72e199dda6040dc",
        "title": "Linux Cheat Sheet For Beginners",
        "content": "ers If you're not using the terminal, Linux commands may appear scary at first by once you start using them you will understand them very easily On a Linux system, there are numerous commands for executing operations and procedures. Having a list of commands on hand is useful whether you are new to Linux or an experienced user. File Permission commands Command Description ls-l to show file type and access permission r read permission w write permission x execute permission -= no permission Chown user For changing the ownership of a file/directory Chown user:group filename change the user as well as group for a file or directory Hardware commands Command Description dmesg Displays bootup messages cat /proc/cpuinfo Displays more information about CPU e.g model, model name, cores, vendor id cat /proc/meminfo Displays more information about hardware memory e.g. Total and Free memory lshw Displays information about system's hardware configuration lsblk Displays block devices related information free -m Displays free and used memory in the system (-m flag indicates memory in MB) lspci -tv Displays PCI devices in a tree-like diagram lsusb -tv Displays USB devices in a tree-like diagram dmidecode Displays hardware information from the BIOS hdparm -i /dev/xda Displays information about disk data hdparm -tT /dev/xda Conducts a read speed test on device xda badblocks -s /dev/xda Tests for unreadable blocks on disk Basic Linux commands Command Description ls Lists all files and directories in the present working directory ls-R Lists files in sub-directories as well ls-a Lists hidden files as well ls-al Lists files and directories with detailed information like permissions,size, owner, etc. cd or cd ~ Navigate to HOME directory cd .. Move one level up cd To change to a particular directory cd / Move to the root directory cat > filename Creates a new file cat filename Displays the file content cat file file > file Joins two files (file, file) and stores the output in a new file (file) mv file \"new file path\" Moves the files to the new location mv filename new_file_name Renames the file to a new filename sudo Allows regular users to run programs with the security privileges of the superuser or root rm filename Deletes a file man Gives help information on a command history Gives a list of all past commands typed in the current terminal session clear Clears the terminal mkdir directoryname Creates a new directory in the present working directory or a at the specified path rmdir Deletes a directory mv Renames a directory pr -x Divides the file into x columns pr -h Assigns a header to the file pr -n Denotes the file with Line Numbers lp -nc , lpr c Prints \"c\" copies of the File lp-d lp-P Specifies name of the printer apt-get Command used to install and update packages mail -s 'subject' -c 'cc-address' -b 'bcc-address' 'to-address' Command to send email mail -s \"Subject\" to-address Command to send email with attachment Environment Variables command Command Description echo $VARIABLE To display value of a variable env Displays all environment variables VARIABLE_NAME= variable_value Create a new variable Unset Remove a variable export Variable=value To set value of an environment variable User management commands of linux Command Description sudo adduser username To add a new user to your current Linux machine sudo userdel -r 'username' deluser removes a user from a specific group. finger Gives information on all logged in user finger username Gives information of a particular user Network command Command Description SSH username@ip-address or hostname login into a remote Linux machine using SSH Ping hostname=\"\" or =\"\" To ping and Analyzing network and host connections dir Display files in the current directory of a remote computer cd \"dirname\" change directory to \"dirname\" on a remote computer put file upload 'file' from local to remote computer get file Download 'file' from remote to local computer ip addr show Displays IP addresses and all the network interfaces ip address add .../ dev eth Assigns IP address ... to interface eth ifconfig Displays IP addresses of all network interfaces ping host ping command sends an ICMP echo request to establish a connection to server / PC whois domain Retrieves more information about a domain name dig domain Retrieves DNS information about the domain dig -x host Performs reverse lookup on a domain host google.com Performs an IP lookup for the domain name hostname -i Displays local IP address wget file_name Downloads a file from an online source netstat -pnltu Displays all active listening ports quit Logout Process command Command Description bg To send a process to the background fg To run a stopped process in the foreground top Details on all Active Processes ps Give the status of processes running for a user ps PID Gives the status of a particular process pidof Gives the Process ID (PID) of a process kill PID Kills a process nice Starts a process with a given priority renice Changes priority of an already running process df Gives free hard disk space on your system free Gives free RAM on your system System Information Command Description time It is a utility that measures the time taken by a program to execute. /proc The files under /proc displays system information. dmseg This command is used to print the contents of the bootup messages displayed by the kernel. This is particularly useful in debugging issues. df Displays the information about the space on the mounted file-systems. who Displays information about the logged in users including their login time. w This command displays who are logged in into the system and the processes they are running. users This command prints the name of the currently logged in users. last This command displays the time of the logged-out users. This also displays the information when the computer was rebooted. lastlog Displays a list of the users and the time/day of their login. whoami It tells the username of the logged in user. free Displays memory status. (Total, Used, Free, cached, Swap) uptime | w It displays how long the computer has been up and running. Additionally, it displays the number of users and the processor load. uname It is used to display system information such as OS type, kernel version, etc. xargs This command is used to run a command as many times as required. date It is used to display the system. It can also be used to set the date/time. cal This command displays the calendar of the current month. acpi This command is used to display the battery status and other ACPI(Advanced Configuration and Power Information) related information. acpi_available This command is used to test if the ACPI subsystem is available. aptitude VI Editing Commands Command Description i Insert at cursor (goes into insert mode) a Write after cursor (goes into insert mode) A Write at the end of line (goes into insert mode) ESC Terminate insert mode u Undo last change U Undo all changes to the entire line o Open a new line (goes into insert mode) dd Delete line dd Delete lines D Delete contents of line after the cursor C Delete contents of a line after the cursor and insert new text. Press ESC key to end insertion. dw Delete word dw Delete words cw Change word x Delete character at the cursor r Replace character R Overwrite characters from cursor onward s Substitute one character under cursor continue to insert S Substitute entire line and begin to insert at the beginning of the line ~ Change case of individual character Conclusion I hope you found this cheatsheet helpful. If you need any help please let me know in the comment section Let's connect on Twitter and LinkedIn Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08933b72e199dda6040de",
        "title": "Integrate Auth with React JS  - A step by step tutorial",
        "content": "rial A few days ago Hashnode announced that they are partnering with Auth for a hackathon with some prize money on the line, but In my point of view most of you guys didn't know much about Auth and their SDKs. so I thought it would be a good opportunity for you to learn about them now. Therefore in this article, I am going to teach you how to integrate Auth with React JS ( A popular JavaScript frontend library). Creating a react app The first step is to create a simple react app which you can do just by running the command below in your terminal.  This might take a while and it depends on your computer specs but once it is done go to the new directory which is created ( In our case `react-auth` ) and run `npm start` or `yarn start`. This command will start the development server for your react app. Now open this directory (In our case `react-auth`) in any code editor Cleaning up the project Once you opened the directory in your code editor, You can see that there are many files and folders, but for this project, we don't need most of them. Let's go ahead and delete the files which we don't need. In the `src` folder delete all files except `App.js`, `Index.js`, and `App.css`. Once you change delete everything which is inside of `App.js` and paste the below code instead.  also delete everything which is inside of `Index.js` and paste the below code instead.  and also delete everything inside of `App.css`. Now in the `public` folder delete everything except `index.html`. Delete everything which is inside of the `index.html` and instead paste the below code  Finally, this is how your folder structure should look like  Installing and Adding Auth in your project Now It is time to install auth in our react application, to do that simply run  This will install Auth in your react application, once it is done your need to import `AuthProvider` in `index.js` and wrap your `React.StrictMode` inside of it. It should look similar this this  `AuthProvider` takes two mandatory props `domain`, `clientId` and `redirectUri`. To get these data we need to create an application in Auth Creating an application in Auth Go to auth.com and signup for a new account, once you completed the signup process you will be redirected to your dashboard that will look similar to the below image. !screely-.png Click on Create Application ( This second box in your dashboard ), this will open a popup that you need to fill some data in it. In the name input, enter your application name and select Single Page Web Application as an application type and click on create button. Once you clicked on create, It will create the application and you will be redirected to your application dashboard. In the settings tab you can edit your application logo, type, redirect uri and etc but for now, copy the Domain and Client Id and pass them as a props to `AuthProvider` and in the redirectUri write `window.location.origin` which should finally look like this  Creating Components Now Let's create some UI components so that users can login, see their profile data, and logout. Therefore go ahead and create a new directory in your `src` folder named `components`. In the `components` create a new file named `LoginButton.js`. Open `LoginButton.js` in your code editor and create a simple button. Here is my code for the button.   Now you need to import `LoginButton.js` in your `App.js`, once you are done your `App.js` should look like this  If you used my code for the button you should see an output similar to below image !screely-.png Similarly use the same code for Logout, Create a new file in components directory named `LogoutButton.js` and paste the same code of `LoginButton.js` into it. Adding Login Functionality In your `LogoutButton.js` import `userAuth` from '@auth/auth-react` and create a constant named `LoginWithRedirect`. Once you are done add `onClick` to button and add `LoginWithRedirect`, just like the code below  %[https://www.loom.com/share/adedebfcfbbed] and now you have login functionality in your app :) Getting Profile Data Now in your `App.js` import useAuth and create a constant named `user`. After that below `LoginButton`, Stringify the JSON to print it in the web page, The `App.js` code should look like this  After successful login in your app, you should see JSON data in your webpage, similar to this  Adding Logout Functionality The logout is pretty similar to login, You just need to change `loginWithRedirect` to `logout`. and you should have similar Logout component  Now, When the user clicks on logout, It will remove the profile data of the user :) Conclusion I hope you found this article helpful. If you need any help please let me know in the comment section. Looking forward to see your submission for this hackathon Let's connect on Twitter and LinkedIn Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08933b72e199dda6040e0",
        "title": "Include HTML Inside of HTML - Just Like React Components",
        "content": "nts Yes, you can include HTML inside of HTML, just like a react / angular component. In this short article, I am going to walk you through, how to include HTML inside of HTML. Creating files Go ahead and create a new HTML file and add the following simple code inside of it  now create a new file and name it `nav.html` ( You can name it anything since this will be the component that we will include in `index.html`). Once created you can either write your component or paste this simple navbar code  Adding package Now we need to add an external NPM package to your index.html, to do that simply paste the following code in your `index.html` file.  Adding HTML inside of HTML Once you added the script, paste the following `include` tag in your `index.html` file.  Finally, this is how your `index.html` file should look like  Now open this index.html in your browser and BOOM you have a navbar in your webpage. Though we didn't add a navbar in your `index.html`, we just include it from another `html` file but we still got navbar. Here is the full code in Codesandbox %[https://codesandbox.io/embed/floral-glitter-pdxvp?fontsize=&hidenavigation=&theme=dark] Conclusion I hope you found this article helpful. If you need any help please let me know in the comment section. Let's connect on Twitter and LinkedIn Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08933b72e199dda6040e2",
        "title": "JavaScript Cheat Sheet For Beginners -",
        "content": "s - JavaScript is a programming language used primarily by Web browsers to create a dynamic and interactive experience for the user. Most of the functions and applications that make the Internet indispensable to modern life are coded in some form of JavaScript. While JavaScript is not the only client-side scripting language on the Internet, it was one of the first and it is still the most widely used. Here you can find the completed JavaScript cheat sheet Arrays Functions Description concat() Concatenate different arrays into one. join() Joins all the elements of one array as a string indexof() Returns the index (first position) of an element in the array lastindexof() Returns the last position of an element in the array sort() Alphabetic sort of array elements reverse() Sort elements in descending order valueof() Primitive value of the element specified slice() Cut a portion of one array and put it in a new array splice() Add elements to an array in a specific manner and position unshift() Add new element to the array in the beginning&nbsp; shift() Remove first element of the array pop() Remove the last element of the array push() Add new element to the array as the last one tostring() Prints the string value of the elements of the array Global Functions encodeURI() Encodes a URI into UTF- encodeURIComponent() Encoding for URI components decodeURI() Decodes a Uniform Resource Identifier (URI) created by encodeURI or similar decodeURIComponent() Decodes a URI component parseInt() Parses the input returns an integer parseFloat() Parses the input and returns a floating-point number eval() Evaluates JavaScript code represented as a string Number() Returns a number converted from its initial value isNaN() Determines whether a value is NaN or not isFinite() Determines whether a passed value is a finite number Loops for looping in javascript while execute a block of code while some condition is true do while similar to while, but executes at least as the condition is applied after the code is executed break break and exit the cycle based on some conditions continue continue next iteration if some conditions are met String Methods Method Meaning length determines length of string indexof() finds position of the first occurrence of a character or text in the string lastindexof() returns last occurrence of text in a string search() searches and returns position of a specified value in string slice() extracts and returns part of a string as another new string substring() substring returns part of the string from start index to the end index specified. cannot take negative values unlike slice() substr() returns the sliced out portion of a string, the second parameter being the length of the final string. replace() replaces a particular value with another touppercase() changes all characters into uppercase tolowercase() changes all characters into lowercase concat() joins two or more strings together into another string trim() removes white spaces from a string charat() finds character at a specified position charcodeat() returns the unicode of character at the specified position split() convert a string into array based on special character accessing characters using [] access a character of string using its index (doesnt work on some versions of ie) User Events onclick&nbsp; event that happens when user clicks on an element onmouseover&nbsp; when the mouse is moved over some element or its children onmouseout&nbsp; User moves the mouse pointer out of an element or one of its children onmouseup&nbsp; when user releases a mouse button while over an element onmousedown&nbsp; when user presses a mouse button over an element onmouseenter&nbsp; pointer moves onto an element onmouseleave&nbsp; Pointer moves out of an element onmousemove&nbsp; pointer is moving when it is over an element oncontextmenu&nbsp; User right-clicks on an element to open a context menu ondblclick&nbsp; The user double-clicks on an element onkeydown&nbsp; When the user is pressing a key down onkeypress&nbsp; The moment the user starts pressing a key onkeyup&nbsp; The user releases a key onabort&nbsp; The loading of a media is aborted onbeforeunload&nbsp; Event that occurs before a document is to be unloaded onunload&nbsp; Event occurs when a page has unloaded onerror&nbsp; When an error occurs while loading an external file onhashchange&nbsp; There have been changes to the anchor part of a URL onload&nbsp; When an object has loaded onpagehide&nbsp; The user navigates away from a webpage onpageshow&nbsp; the user navigates to a webpage onresize&nbsp; The document view is resized onscroll&nbsp; An elements scrollbar is being scrolled onblur&nbsp; When an element loses focus onchange&nbsp; when content of a form element like &lt;input&gt;, &lt;select&gt; and &lt;textarea&gt; changes onfocus&nbsp; An element gets focus onfocusin&nbsp; When an element is about to get focus onfocusout&nbsp; When element is about to lose focus oninput&nbsp; User input on an element oninvalid&nbsp; An element is invalid onreset&nbsp; form reset onsearch&nbsp; The user writes something in the input type search onselect&nbsp; The user selects some text (&lt;input&gt; and &lt;textarea&gt;) onsubmit&nbsp; event that happens upon submitting the form try&nbsp; block of code to execute in case of no errors catch&nbsp; block of code to execute in case of an error throw&nbsp; Create custom error messages rather than standard JavaScript errors finally&nbsp; block that is always executed whether there is error in execution or not transitionend&nbsp; event triggered when a CSS transition has completed onmessage&nbsp; A message is received through the event source ononline&nbsp; The browser starts to work online onoffline&nbsp; The browser starts to work offline ontoggle&nbsp; The user opens or closes the &lt;details&gt; element onpopstate&nbsp; When the windows history changes onshow&nbsp; A &lt;menu&gt; element is shown as a context menu onstorage&nbsp; A Web Storage area is updated onwheel&nbsp; Mouse wheel rolls up or down over an element ontouchstart&nbsp; A finger is placed on the touch-screen ontouchend&nbsp; Users finger is removed from a touch-screen ontouchcancel&nbsp; Screen-touch is interrupted ontouchmove&nbsp; User finger is dragged across the screen onabort&nbsp; Media loading is aborted onended&nbsp; The media ended onerror&nbsp; Happens when an error occurs while loading an external file oncanplay&nbsp; The browser can start playing media&nbsp; oncanplaythrough&nbsp; The browser can play through media without stopping ondurationchange&nbsp; change in the duration of the media onloadeddata&nbsp; Media data loaded onloadedmetadata&nbsp; Metadata (e.g. dimensions, duration) are loaded onloadstart&nbsp; &nbsp; The browser starts looking for specified media onpause&nbsp; Media is paused either by the user or automatically onplay&nbsp; The media started to play or is no longer paused onplaying&nbsp; Media is playing after being paused or stopped for buffering onprogress&nbsp; The browser is in the process of downloading the media onratechange&nbsp; The playing speed of the media changes onseeked&nbsp; User is finished moving/skipping to a new position in the media onseeking&nbsp; The user starts moving/skipping onstalled&nbsp; The browser is trying to load the media but it is unavailable onwaiting&nbsp; Media paused but expected to resume (like in buffering) onsuspend&nbsp; The browser is intentionally not loading media ontimeupdate&nbsp; The playing position has changed (like in case of fast forward) onvolumechange&nbsp; Media volume has increased or reduced Operators Basic Addition (+) Subtraction (-) Multiply () Divide (/) Remainder (%) Increment (++) Decrement (--) Execute brackets first () Logical And (&amp;&amp;) Or (||) Not (|) Comparison Equal to (==) Equal value and type (===)&nbsp; Not equal (!=) Not equal value or type (!==) Greater than (&gt;)&nbsp; Less than (&lt;)&nbsp; Greater than or equal to (&gt;=) Less than or equal to (&lt;=) Ternary operator (?) Bitwise AND (&amp;) OR (|)&nbsp; NOT (~)&nbsp; XOR (^)&nbsp; Left shift (&lt;&lt;) Right shift (&gt;&gt;) Zero fill right shift (&gt;&gt;&gt;) Date Date()&nbsp; Creates a new date object with current date and time Date(, , , , , , )&nbsp; Create a custom date object. Format  (yyyy, mm, dd, hh, min, s, ms). Except for year and month, all parameters are optional. Date(\"--\")&nbsp; Date declaration as a string getDate()&nbsp; Get the day of the month as a number (-) getDay()&nbsp; &nbsp; The weekday as a number (-) getFullYear()&nbsp; Year as a four-digit number (yyyy) getHours()&nbsp; Get the hour (-) getMilliseconds()&nbsp; Get the millisecond (-) getMinutes()&nbsp; Get the minute (-) getMonth()&nbsp; Month as a number (-) getSeconds()&nbsp; Get the second (-) getTime()&nbsp; Get the milliseconds since January , getUTCDate()&nbsp; The day (date) of the month in the specified date according to universal time (also available for day, month, full year, hours, minutes etc.) parse&nbsp; Parses a string representation of a date and returns the number setDate()&nbsp; Set the day as a number (-) setFullYear()&nbsp; Sets the year (optionally month and day) setHours()&nbsp; Set the hour (-) setMilliseconds()&nbsp; Set milliseconds (-) setMinutes()&nbsp; Sets the minutes (-) setMonth()&nbsp; Set the month (-) setSeconds()&nbsp; Sets the seconds (-) setTime()&nbsp; Set the time (milliseconds since January , ) setUTCDate()&nbsp; Sets the day of the month for a specified date according to universal time (also available for day, month, full year, hours, minutes etc.) Metacharacters .&nbsp; Find a single character, except newline or line terminator \\w&nbsp; Word character \\W&nbsp; Non-word character \\d&nbsp; A digit \\D&nbsp; A non-digit character \\s&nbsp; Whitespace character \\S&nbsp; Non-whitespace character \\b&nbsp; Find a match at the beginning/end of a word \\B&nbsp; A match not at the beginning/end of a word \\&nbsp; NULL character \\n&nbsp; A new line character \\f&nbsp; Form feed character \\r&nbsp; Carriage return character \\t&nbsp; Tab character \\v&nbsp; Vertical tab character \\xxx&nbsp; The character specified by an octal number xxx \\xdd&nbsp; Character specified by a hexadecimal number dd \\uxxxx&nbsp; The Unicode character specified by a hexadecimal number xxxx Credit This cheat sheet is a modified cheatsheet provided on Hackr website Conclusion I hope you found this cheat sheet helpful. If you need any help please let me know in the comment section. Let's connect on Twitter and LinkedIn Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08933b72e199dda6040e4",
        "title": "How I Increased My Blogs Traffic To Over , Page Views In My First  Days Blogging | Hashnode + Dev + Devdojo",
        "content": "+ Devdojo The most typical question asked by new bloggers is, \"How can I gain more visitors to my blog?\" It's been around days since I started blogging on Hashnode ( My main blog ), DEV, and Devdojo, and I reached more than , page views. Since then, I've been getting a lot of questions about how I increased my traffic, therefore I'll put it all out in this article. !screely-.png !screely-.png !screely-.png As you can see, I received , visitors in DEV, , visitors in Hashnode, and , in Devdojo which is a total of ,. And the strategies that I used are Publishing articles consistently I published a new blog article every day ( or at least article per two days ) and I've never gone more than a week without blogging. After doing some research, I discovered that the more often I published an article, the more frequently my readers returned to my site. Writing a catchy blog title Your whole article depends on your articles' headline, so the more catchy / best title your write for your article, the more visitors you will get. For more information here is a detailed article regarding \"Blog Title Formulas That Will Boost Your Traffic\" : https://coschedule.com/blog/catchy-blog-titles Finding a good keyword If you want to have traffic from search engines such as Google, Bing, Yandex and etc. then you need to find the correct keyword for your articles. Most beginners just rely on their best guesses when creating content. As you can imagine, this strategy is a hit or miss. If you use this strategy, then theres a high chance that your articles will likely not rank high in search engines. Optimizing Website Speed Your visitors arent going to wait around for your blog to load. If your page isnt coming up fast enough, theyll hit the back button and move on to the next Google listing (i.e your competitor). That is why the first thing that I made sure it is fine was my website speed. As a newbie in blogging, I tried many platforms such as WordPress, Blogger, Ghost CMS and etc. But finally, I stopped at Hashnode. Hashnode blogs are completely optimized. Here is an article by @sandeep, the Co-Founder of Hashnode on how they are optimizing their blogs : %[https://townhall.hashnode.com/powerful-and-superfast-hashnode-blogs-now-powered-by-nextjs--and-vercel] Promoting articles on social media Every time after publishing an article, I would definitely post it on Twitter, Facebook, and Linkedin with related tags such as javascript python web_development. This helped me to get most of my traffic from social media Interacting with other developers From the time when I started blogging besides writing articles, I got the habit of reading articles too so I started going through other articles, reading them, and commenting on their article. This helped me to get a little Traffic too. Conclusion That is it, folks, hope you found this article helpful. If you need any help please let me know in the comment section. Let's connect on Twitter and LinkedIn Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08933b72e199dda6040e6",
        "title": "Stop Using ../../../ While Importing Components, Instead Use This Method",
        "content": "hod Introduction When you go to GitHub and see some other developers code, most of them are importing their components like this  This is called relative import. Relative import will start with either `./`,`/` or `../`. I am not telling that this is the wrong way and even there is no issue if you import like that, but if you have a very big and complex project, relative imports will look a lot messy similar to this.  However, there is a very better and cleaner way to import these components. This method is called absolute import. An absolute import will look this like  Adding absolute imports to React Apps (CRA) Open your project in any code editor and create a new file in your project's root directory named `jsconfig.json`. Once you created the file paste the below JSON inside of it.  This will instruct Webpack to use the `src` directory as a base one. Conclusion I hope you found this short article helpful. If you need any help please let me know in the comment section. Let's connect on Twitter and LinkedIn Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08933b72e199dda6040e8",
        "title": "Top Chrome Extensions That You Wish You Knew It Earlier",
        "content": "ier Chrome is a fantastic browser  it's quick, well-designed, and jam-packed with useful features  but that's only the beginning. Chrome's true strength lies in its vast library of add-ons, which provide it with a never-ending supply of new features and capabilities. In this article, I am going to introduce you top extensions that you might not know about them. Fake Filler Fake Filler is a form filler that fills all inputs on a page with scam/dummy data. !screely-.png ColorPick Eyedropper A zoomed eyedropper & color chooser tool that allows you to select color values from web pages and more. !screely-.png Site Palette A must-have tool for designers and front-end developers to grab colors for any website. !screely-.png WhatFont The easiest way to identify fonts on web pages. !screely-.png Responsive Viewer Show multiple screens once, Responsive design tester !screely-.png PerfectPixel Adds a semi-transparent image overlay over the top of the developed HTML to easily perform pixel-perfect comparisons between them, useful for replicating UI designs. !screely-.png Imageye Find and download all images on a web page. With Imageye you can find, browse and download all the images present on a web page. !screely-.png Stylebot Change the appearance of the web instantly. !screely-.png Page Ruler Redux A Web Developer\\Designer ruler to get perfect pixel dimensions and positioning to measure elements on any web page. !screely-.png Web Developer Adds a toolbar button with various web developer tools. !screely-.png Conclusion I hope you found this short list helpful. If you need any help please let me know in the comment section. Let's connect on Twitter and LinkedIn Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08934b72e199dda6040ea",
        "title": "Design Resources for Developers - II",
        "content": "II Are you searching for the best design resources? This is a collection that every developer should bookmark since it contains the greatest resources for creating an eye-catching and aesthetically enhanced project. Introduction Every developer's job entails some kind of product design. It's not just about having a good appearance; it's also about having engaging visuals and a good overall presentation. Rather than spending time and money on a lengthy design process, it is preferable to leverage resources that offer ready-to-use components and features for a fantastic, amazing, and outstanding product. Part one of these resources can be found here Table of contents Accessibility resources Checklists Guidelines Industry leaders, educators, and consultants Online courses Pattern/component libraries Requirements and standards Testing tools and development references Further reading Books and zines Individual publications Accessibility History Independent practice, consulting, freelancing Process and mindset User experience and interaction design User research Publishers and distributors Browser features Google Chrome extensions and bookmarklets Google Chrome DevTools Brushes Colors and color palettes Accessible color palettes Accessibility testing tools Fonts Directories and marketplaces Individual foundries Icons and emoji Inspiration and criticism websites Brand identity Illustration and art Print, layout, packaging, art direction Motion Typography Web, mobile, product UX patterns and components Visual design macOS apps Development Font management Menubar apps Mockups Prototyping tools Stock graphics Stock photography User testing and interactive feedback tools  Accessibility resources Checklists F Accessibility Guide Checklist  WCAG . compliance checklist for developers, driven by priority HHS.govs checklist for creating accessible PDFs  designing accessibly for artifacts that aren't apps or websites is important, too! Vox Media Accessibility Guidelines Checklist  best practices for designers, engineers, PMs, QA, and editorial staff (with sources to read more; great to send to coworkers on different teams) Guidelines F Accessibility Guide  hub of accessibility resources and principles by government office F Empathy Prompts  open source list of considerations & challenges to help build empathy Google Material Design Accessibility Principles  practices for color, sound, motion, layout, copy, hierarchy, focus, and implementation Inclusive Design Principles  seven clear principles to follow to put people first, by leading experts The Paciello Group Microsoft Inclusive Design Principles  Microsoft's guidelines for designing accessible and inclusive experiences, including a detailed manual (.pdf) with awesome visualizations, and activity cards for considerations & challenges while brainstorming Industry leaders, educators, and consultants Deque Karl Groves Knowability Level Access Marcy Sutton The Paciello Group Simply Accessible WebAIM Online courses Pluralsight Meeting Web Accssibility Guidelines course  [paid]  practical course with code examples to meet Section and/or WCAG . requirements for government/education projects Udacity Web Accessibility course, by Google  [free]  practical course focused on front-end design and development regarding markup and visual styling Pattern/component libraries Ay Style Guide eBay MIND Patterns Requirements and standards WCAG .  the WCs Web Content Accessibility Guidelines web standards specification ADA  Americans with Disabilities Act prohibits discrimination against people with disabilities Section  amendment to the Workforce Rehabilitation Act federally mandating all tech developed, procured, maintained, or used by the federal government be accessible to persons with disabilities AODA  Accessibility for Ontarians with Disabilities Act, enacted for the province to become accessible for people with disabilities by  Testing tools and development references Accessible-email.org  browser-based semantic analysis to report ay and usability issues errors in marketing emails Colors palettes & contrast testing tools  listed in the \"Colors\" category HTML Accessibility  lists current accessibility support status of HTML features across major browsers pay  automated accessibility testing on the command line for programmatic accessibility reporting totay  Khan Academy's jQuery-based semantic analysis that can be inserted into a page or run as a bookmarklet Further reading Accessibility Wins  single-serving Tumblr showcasing small victories in accessible web design and development Awesome Accessibility  a curated list of awesome accessibility tools, articles and resources on GitHub Books on accessibility  listed in the Books category Books and zines Individual publications Accessibility _A Web for Everyone_ by Sarah Horton & Whitney Quesenbery,  practical advice and examples to build accessible web products without sacrificing design or innovation _Inclusive Design Patterns  Coding Accessibility Into Web Design_ by Heydon Pickering,  real-world techniques and strategies to build and prototype accessible interfaces History _Meggs History of Graphic Design_ by Philip B. Meggs,  the unrivaled college textbook authority on the history of graphic design, mostly in America and Europe Independent practice, consulting, freelancing _Design Is a Job_ by Mike Monteiro,  no bullshit lessons on selling yourself and working with others _Pricing Design_ by Dan Mall,  brief and invaluable reference on value-based pricing Process and mindset _The Artists Way_ by Julia Cameron,  classic international bestseller on the creative process _The Shape of Design_ by Frank Chimero,  sometimes insightful, sometimes insufferable; a rumination on making things for other people Sprint by Jake Knapp &amp; more,  a balanced book of details, examples, checklists, and scripts to perform your own famed Google Ventures design sprint User experience and interaction design _Microinteractions: Designing with Details_ by Dan Saffer,  straight-forward examples on the small details that exist inside & around a products features User research Just Enough Research by Erika Hall,  breaks down the huge topic of design research in a digestible, approachable, organized, and humorous way Publishers and distributors A Book Apart  top of the class brief books for people who make websites Chronicle Books  innovative and design-y adult and childrens books, based in San Francisco Draw Down  large catalog of small-press books and zines on graphic design, culture, criticism, art, and more Gestalten  high-quality books on graphic design, art, and culture MIT Press  hundreds of new books published yearly from leading researchers on technology, art, and science Rosenfeld Media  user experience books, training, workshops, seminars, and experts Smashing Magazine  affordable, practical books from digital design practitioners Browser features Google Chrome extensions and bookmarklets Tachyons X-ray  debug & align objects to an or px grid Type Sample  identify and sample webfonts  samples for free, or unlimited samples for $/year subscription. available as a bookmarklet or Chrome extension WhatFont?  inspect a webfonts name, family, weight, size, style, color, line height, and source (if hosted via Google Fonts or Typekit) Google Chrome DevTools Animation timeline & editing  powerful tools to inspect and modify CSS animations Device Mode  test responsiveness by using popular viewport sizes or creating your own presets Full-page screenshot  its inside the Device Mode  no additional browser extension required! Network performance  analyze resource requests and emulate mobile experiences Brushes Kyle T. Webster  best Photoshop brushes for drawing and adding small texture (though they are not of much use without a pressure-sensitive tablet) RetroSupply  Photoshop and Illustrator brushes for multiple uses, including adding large (px) texture. recommended packs: Standard Issue Brush & Texture Bundle, Standard Issue Subtle Brush Kit, VectorFuzz - Shauna Lynn Panczyszyns \"Hand Lettering Toolbox\"  Photoshop brushes made exclusively for digital lettering, with more specific sets here Syd Weiler  gorgeous Photoshop brushes, niched mostly toward organic shapes and textures Colors and color palettes clrs.cc  really pretty default colors for prototyping Coolors  interactive color palette generator Google Material design colors  choose from all the hues in Googles material design palette, see a tint and shade of each, and test against white & black text for accessibility Kuler  Adobe color palette resource Paletteable  interactive color palette generator Sip  macOS and iOS colorpicker app, allows you to save custom palettes Wikipedias category for color shades  if you wanna nerd out Accessible color palettes Randomay  accessibility-friendly random color generator for text & background combinations Accessibility testing tools Color Oracle  open source macOS color blindness simulator Contrast Analyzer  open source macOS eye-dropper tool for text/bg accessibility testing, shows fail/AA Large/AA/AAA results Contrast  [paid]  minimal & gorgeous macOS menubar eye-dropper tool, shows fail/AA Large/AA/AAA results Hex Naw  input up to hex codes to test entire color systems for accessible contrast Online contrast checker  input text/bg hex codes for accessible contrast testing - Spectrum  Google Chrome extension to instantly test web pages for different types of color vision deficiency Fonts Directories and marketplaces Google Fonts  hundreds of free webfonts hosted via Google or self-hosted, downloadable via GitHub repo with individual licenses MyFonts  thousands of fonts from all kinds of foundries, includes some trial fonts & free families. (good for searching and testing, but its better to buy through the foundries themselves!) TypeKit  included with Adobe CC subscription, some fonts & families are only available for desktop _or_ web use. larger selection available for individual purchase through Typekit Marketplace Type Network  incredibly high-quality fonts by select independent foundries YouWorkForThem  thousands of fonts in the original creative marketplace Individual foundries A Type Avondale Type Co. Beta Type Bold Monday Colophon Commercial Type Dalton Maag DSType Font Bureau FontFont Fountain GrilliType Hoefler & Co. House Industries HvD Fonts Just Another Foundry Lineto Mark Simpson Okay Type P Process Type Sudtipos The Designers Foundry TypeTogether Typotheque Village Icons and emoji EmojiOne  [free & paid]  emoji set with free & premium licensing options available; downloadable as pngs, vectors, and font files Emojipedia  [free]  every emoji, ever Google Material Design icons  [free]  + open source icons from Googles gorgeous design language The Noun Project  [free & paid]  available for use with Creative Commons attribution or available to purchase without attribution for fair prices; best quality selection in one place SymbolSet  [paid]  super high-quality icon fonts categorized by topic and style Vector Emoji  [free]  iOS emoji faces recreated in vector as layered PSDs or Sketch files Inspiration and criticism websites Brand identity BP & O  killer packaging and brand design gallery Brand New  brand identity case studies Shipcom  collection of shipping, manufacturing, transport, and logistics logos Illustration and art Boooooooom  art, illustration, design, photography interviews and features Jacky Winter  illustration collective Motion Wine After Coffee  curated channel of the best motion graphics, animation, and video Print, layout, packaging, art direction Art of the Menu  restaurant-specific print menu design case studies Designspiration  photography, print design, cool stuff gallery, Pinterest style FPO  print design case studies Grafik  cutting-edge and old school fringe aesthetic case studies Its Nice That  creative inspiration worldwide Mind Sparkle Mag  print, brand, interior, industrial design features Trendlist  graphic design trends for the designers designer Typography Alphabettes  commentary, research, and work showcases by women in type design Fonts In Use  highest quality public archive of typography indexed by typeface, format, and industry Typographica  reviews and commentary on type books and typefaces Type Wolf  curated examples of typography on the web with premium guides and resources Web, mobile, product UX patterns and components Capptivate  mobile design patterns and components in video form Collect UI  UI design components gallery populated from Dribbble posts Empty Stat.es  empty state designs Little Big Details  delightful, thoughtful UX components that make a big difference PTTRNS  mobile design patterns and components Pattern Tap  website components gallery UI Movement  UI design components gallery and newsletter, largely culled from Dribbble Unmatched Style  website design and interactive components gallery Visual design HTTPSTER  website design gallery. sort by category and style Lapa  website design gallery. sort by category and color One Page Love  website design gallery featuring only one-page websites Pages.xyz  website design gallery for digital product marketing and ecommerce sites Really Good Emails  email design gallery Siteinspire  website design gallery with the tightest curation. sort by category, style, subject, or CMS. includes starred favorites Site See  website design gallery. sort by category and color. includes custom curated collections Web Creme  website design gallery, updated sporadically, online since (!) macOS apps Development Dash  [paid]  instant offline access to + API documentation sets. Font management RightFont  [paid]  preview, sync, install, and manage fonts on your Mac or Dropbox/Google Drive Menubar apps LittleIpsum  [free]  sgenerate lorem ipsum lightning fast (can automatically wrap in `p` tags, too) LICEcap  [free]  weirdest name, most straightforward and lightweight way to capture parts of your screen as a gif (also available for Windows) Mockups Facebook Design  [free]  diverse hands holding mobile devices Graphicburger  [free]  physical product mockups & templates GraphicRiver  [paid]  any product mockup you could ever think of Pixeden  [free & paid]  physical product mockups & templates Prototyping tools Adobe Experience Design  included with Adobe CC subscription, for creating wireframes and protoyping interactivity Atomic  prototyping tool for mobile or desktop interactions or animations Figma  the first real-time collaborative interface design tool Framer  prototyping tool built on framer.js for prototyping mobile and desktop apps InVision  collaborative click-through prototyping tool for web and mobile Marvel  simple click-through prototyping tool for web and mobile apps Principle  motion design prototyping tool for mobile and web applications More details on these apps and the differences between them @ cooper.com Stock graphics CreativeMarket  huge marketplace for design assets of varying qualities (including fonts and stock photos), great for when you need to recreate a specific style or work in a particular niche RetroSupply  well-made and well-priced assets that skew toward retro/vintage YouWorkForThem  cool textures and imagery from the original online creative marketplace Stock photography Death to the Stock Photo  [free & paid]  new sets emailed weekly, premium plans available for more photos and unlimited access Gratisography  [free]  photos by one photographer requiring no attribution, most are weird but some are chill to save in a folder for later since theyre free Magdeline  [free]  similar to unsplash, some are licensed in public domain, some require Creative Commons attribution Masterfile  [paid]  stock photos, a little higher quality than iStock. registered account includes unwatermarked hi-res comps Stocksy  [paid]  high quality, stylish lifestyle paid stock photos (watermarked comps) Unsplash  [free]  the first of the hip and gorgeous free with no strings attached stock photo sites Women of Color in Tech  [free]  photos of women in color in tech settings since every other stock photo site fails at this hardcore User testing and interactive feedback tools Lookback  users record their screen, face, voice, and touches while using your site/app/prototype/wireframe UsabilityHub  for quick -minute qualitative, navigation-based, or hot-spot based remote tests for static images or a series of images UserTesting  finds participants for you, runs a usability test, and records and stores videos of real people speaking their thoughts as they use your site/app/prototype/wireframe  Conclusion I hope you found this list helpful. If you need any help please let me know in the comment section Let's connect on Twitter and LinkedIn Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08934b72e199dda6040ec",
        "title": "How To Use Google Like A Pro",
        "content": "Pro Google is such a dominant force in the search engine industry that it is the default search engine for Android smartphones and web browsers such as Chrome. To put it frankly, Google has become one of the most widely utilized online resources for discovering everything from random facts and music videos to products and services. The sophisticated Google search methods and tips listed below can help you narrow your search results. Site: Using site: will search within a specific website. For example, if you want to find an article that is published only on Hackernoon, you can simply type  !screely-.png Asterisk You can use to fill missing words or phrases, like :  !screely-.png Quotation \" \" \"\" is used to search for words or phrases, like :  !screely-.png Related: You can use related: to sites that are similar to other sites, for example  !screely-.png link: Use link: to find a page that links to another page, like :  !screely-.png Conclusion I hope you found these tips helpful. If you need any help please let me know in the comment section. Let's connect on Twitter and LinkedIn Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08934b72e199dda6040ee",
        "title": "Remove all console.log() from your project in less than a minute",
        "content": "ute Introduction console.log() is a debugging tool that can assist you to figure out what your code is doing. You may follow along as your code executes by displaying a message that contains either descriptive text that tells you what's going on or the values of certain variables. Removing all console.log() from your project before production can be very difficult, Here is how to remove all console.log() from your project in less than a minute. Step Open your project in VS Code ( Since we are using Regex, It is easier to use it in VS Code ) Step Click on the search icon on VS Code sidebar. It will open the search option !screely-.png Step In search placeholder type console.log.$ and select Use Regex option which can be found on the upper right corner of the search panel thats designated by the icon . !screely-.png Step Once you searched for all the console.log(), Click on replace to remove all console.log() and BOOM Now you don't have any console.log() in your project Conclusion I hope you found this short helpful. If you need any help please let me know in the comment section. Let's connect on Twitter and LinkedIn Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08934b72e199dda6040f0",
        "title": "Building a Restful CRUD API with Node JS, Express, and MongoDB",
        "content": "oDB Application Programming Interface is the abbreviation for API. An API is a software interface that enables two apps to communicate with one another. In other words, an API is a messenger that sends your request to the provider and then returns the response to you. Fun Fact: % of eBay transactions are via their API In this tutorial, well be building a RESTful CRUD (Create, Retrieve, Update, Delete) API with Node.js, Express, and MongoDB. Creating the application On your Desktop ( or any other place ) create a new folder named `nodejs-api` and open it in any Code Editor (for this Tutorial I am using VS Code). Once you done open terminal ( You can either use VS Code terminal or external terminal ) and run  This will generate a simple package.json and now we need to install some dependencies which we need. Fire up your terminal and run  Mongoose is an ODM (Object Document Mapping) tool for Node.js and MongoDB. It helps you convert the objects in your code to documents in the database and vice versa. This will install Express ( for server ), Mongoose, and Body Parse for parsing data The body-parser middleware converts text sent through an HTTP request to a target format or in other words body-parser parses your request and converts it into a format from which you can easily extract relevant information that you may need Now once everything is installed, we can start creating our web server. Setting up the webserver Create a new file named `server.js` in the root folder of the application and add the following code to it ```javascript const express = require('express'); const bodyParser = require('body-parser'); const app = express(); app.use(bodyParser.urlencoded({ extended: true })) app.use(bodyParser.json()) app.get('/', (req, res) => { res.json({\"message\": \"Server is running :D\"}); }); let PORT = app.listen(PORT, () => { console.log(`Server is listening on port ${PORT}`); }); ``` In the above code - First, we imported the dependencies which we need i.e Express and Body Parser - Second, Once we imported them we added body-parser middlewares using expresss app.use() method - Then, We defined a simple GET route that returns a message that the server is running. - Finally, we defined the port and listen to that port for incoming connections Now in your terminal, run `node server.js` and go to `http://localhost:` to access the route we just defined. and you should see  Connecting our application to MongoDB In `server.js` import mongoose, just like the code below  and add the below code after it  finally, this is how your `server.js` should look like now ```javascript const express = require(\"express\"); const bodyParser = require(\"body-parser\"); const mongoose = require(\"mongoose\"); mongoose.Promise = global.Promise; mongoose.connect(YOUR_MONGODB_URL, { useNewUrlParser: true, } ) .then(() => { console.log(\"Successfully connected to the database\"); }) .catch((err) => { console.log(\"Could not connect to the database. Error...\", err); process.exit(); }); const app = express(); app.use(bodyParser.urlencoded({ extended: true })); app.use(bodyParser.json()); app.get(\"/\", (req, res) => { res.json({ message: \"Server is running :D\" }); }); let PORT = ; app.listen(PORT, () => { console.log(`Server is listening on port ${PORT}`); }); ``` Defining the model in Mongoose Now, in the root directory create a new folder named `app` and inside of it create another folder named `models`. Create a new file named `app.model.js` and add the following code inside of it  This model contains one field that is `message` Defining the routes Now create a new folder called routes inside the app folder and add the following code inside of it  include the routes in server.js. Add the following require statement before app.listen() line inside server.js file.  Writing the Controller functions Create a new folder called controllers inside the app folder, then create a new file called app.controller.js inside app/controllers folder with the following contents -  restart your node.js server an now we have our API ready Testing APIs with postman - Create and Save a new Message !Screenshot -- at ...png - Retrieve all messages from the database !Screenshot -- at ...png - Find a single message with a `messageId` !Screenshot -- at ...png - Update a message identified by the `messageId` in the request !Screenshot -- at ...png - Delete a message with the specified `messageId` in the request !Screenshot -- at ...png Conclusion I hope you found this article helpful. If you need any help please let me know in the comment section. You can find the complete source code here Let's connect on Twitter and LinkedIn Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08934b72e199dda6040f2",
        "title": "An Ultimate Guide to Git and Github",
        "content": "hub As a developer, we all know a little about Git and GitHub but there are some developers who still have doubt and question about Git and GitHub. Therefore in this article, I am going to break everything down regarding Git and GitHub, so that you can understand it clearly. Introduction Git is a source code management technology used by DevOps. It is a free and open-source version control system that is used to efficiently manage small to extremely big projects. Git is a version control system. Version control is a file manager that maintains track of changes to your projects over time and keeps a complete history of whatever you're working on. It allows many developers around the globe to work together on the same project at the same time GitHub is a site that hosts Git repositories, but it also has a lot of its own features. It is a web-based graphical interface for Git, which is a command-line application. Each project has access control and numerous collaborative capabilities, such as wikis and rudimentary task management tools. It is the home of million ( September ) developers around the globe which is currently owned by Microsoft Installation Every operating system has its own steps to install Git, In this article, I will cover Linux, Windows, and Mac ( Which are the most popular ones ) Linux If you are a Linux user ( like me ), you will probably know that the Linux family is very big and It has many distros such as Ubuntu, Fedora, Arch and etc. However, in this article, I will cover Debian ( Ubuntu ) and Fedora Debian / Ubuntu (apt-get) - From your shell, install Git using apt-get:  - Verify the installation was successful by typing git --version:  - Configure your Git username and email using the following commands. These details will be associated with any commits that you create.   Fedora (dnf/yum) - From your shell, you can install Git using dnf or yum  or  - Verify the installation was successful by typing git --version:  - Configure your Git username and email using the following commands. These details will be associated with any commits that you create.   Windows - Download the latest Git for Windows setup - You should see the Git Setup wizard screen after you've successfully run the installer. Complete the installation by following the Next and Finish prompts. For most people, the default parameters are adequate. - Open a Command Prompt or Git Bash and run the below command to configure your Git username and email. These details will be associated with any commits that you create.   Mac - Download the latest Git for mac installer - Follow the prompts to install Git. Or, install Homebrew and run the following to install an up to date version of Git on your Mac:  - Open a terminal and verify the installation was successful by typing the below command.  - Configure your Git username and email using the following commands. These details will be associated with any commits that you create.   Basic GitHub terms Fork: Fork is a copy of another user's repository that lives on your personal Github account. The major reason for this is to adapt other people's repositories to meet your needs. Main: When you create a new repository, it comes with a default development branch. Readme: It is a text file that contains information about other files in a repository. It is usually a basic plain text file called Read Me that serves as documentation. Repository: A Repository is a place where tour work will be stored in a directory or storage space. This is sometimes abbreviated as \"repo\" by GitHub users. License: If you want your repository to be genuinely open source, you'll need to license it so that others can use, modify, and distribute it. Pull request: It allows you to announce a change made by you in the branch. It is a way for a developer to let the rest of the team know when they've finished a feature. Basic Git Command `git init`: The git init command creates a new Git repository. Executing this command creates a `.git` subdirectory in the current working directory, which contains all of the necessary Git metadata for the new repository. `git clone`: The git clone command is used to create a copy of a specific repository or branch within a repository. `git branch `: This git command is used to create a new branch for a specific repository. `git checkout `: The git checkout command lets you navigate between the branches created by the git branch. `git add`: It is the first command in a chain of operations that directs Git to \"save\" a snapshot of the current project state, into the commit history. It is used to tracks your file and changes in Git `git commit`: The git commit command takes a snapshot of the current state of the project's changes. `git push` : This command is used to upload git commits to a remote repository like Github Demonstration - To create a new folder, you need to use the below command.  - To navigate to your newly created folder, use the below command.  - To create a new file, you need to the below command.  - Use the below command to see untracked changes in the `index.js` file.  - To add `index.js`, use the command below.  - To commit your changes use the below command  - To add your remote origin link, use the command below  - To push your code to GitHub, you can use the below command  GitHub special repository GitHub offers a special repository by your username, which should contain a `readme.md` and it will show in your GitHub profile, just like mine !screely-.png If you want a similar look, you can fork my repository here Conclusion I hope you found this article helpful. If you need any help please let me know in the comment section. Let's connect on Twitter and LinkedIn Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08934b72e199dda6040f4",
        "title": "Trending projects on GitHub for JavaScript developers",
        "content": "opers Web Development for Beginners - A Curriculum Azure Cloud Advocates at Microsoft are created a -week, -lesson curriculum all about JavaScript, CSS, and HTML basics. Each lesson includes pre-and post-lesson quizzes, written instructions to complete the lesson, a solution, an assignment, and more. Our project-based pedagogy allows you to learn while building, a proven way for new skills to 'stick'. Link: https://github.com/microsoft/Web-Dev-For-Beginners !screely-.png Three JS - JavaScript D library The aim of the project is to create an easy-to-use, lightweight, cross-browser, general-purpose D library. The current build only includes a WebGL renderer but WebGPU (experimental), SVG and CSSD renderers are also available in the examples. Link: https://github.com/mrdoob/three.js !screely-.png D JS - Bring data to life with SVG, Canvas, and HTML D (or D.js) is a JavaScript library for visualizing data using web standards. D helps you bring data to life using SVG, Canvas, and HTML. D combines powerful visualization and interaction techniques with a data-driven approach to DOM manipulation, giving you the full capabilities of modern browsers and the freedom to design the right visual interface for your data. Link: https://github.com/d/d !screely-.png Mammoth JS - Docx to HTML Mammoth is designed to convert .docx documents, such as those created by Microsoft Word, Google Docs, and LibreOffice, and convert them to HTML. Mammoth aims to produce simple and clean HTML by using semantic information in the document and ignoring other details. For instance, Mammoth converts any paragraph with the style Heading to h elements, rather than attempting to exactly copy the styling (font, text size, color, etc.) of the heading. Link: https://github.com/mwilliamson/mammoth.js !screely-.png Grapes JS - Open source Web Builder Framework GrapesJS is a free and open-source Web Builder Framework that helps to build HTML templates, faster and easier, to be delivered in sites, newsletters, or mobile apps. Mainly, GrapesJS was designed to be used inside a CMS to speed up the creation of dynamic templates. To better understand this concept check the image below Link: https://github.com/artf/grapesjs !screely-.png Plyr - A simple HTML, YouTube, and Vimeo player Plyr is a simple, lightweight, accessible, and customizable HTML, YouTube, and Vimeo media player that supports modern browsers. Link: https://github.com/sampotts/plyr !screely-.png Size Limit - Calculate the real cost to run your JS app Size Limit is a performance budget tool for JavaScript. It checks every commit on CI, calculates the real cost of your JS for end-users, and throws an error if the cost exceeds the limit. Link: https://github.com/ai/size-limit !screely-.png Conclusion I hope you found this article helpful. If you need any help please let me know in the comment section. Let's connect on Twitter and LinkedIn Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08934b72e199dda6040f6",
        "title": "Quick and Effective Ways to Learn JavaScript",
        "content": "cript If you've been studying JavaScript or web development in general but still feel inadequate in your knowledge of the topic. Perhaps you're having trouble remembering or applying all you've learned. This is the article for you. !screely-.png Google shows ,,, results on \"Why JavaScript is hard to learn\", Many developers don't learn JavaScript and jump to some other alternative language ( Though each language has its own specialty ) because they think JavaScript is hard. But you shouldn't be among those developers. In this article, you are going to learn about \"How can you learn JavaScript\". Follow a Well-structured Curriculum As a self-taught developer, it's your responsibility to find a standard structure to follow. Avoid learning anything that comes your way at all costs. You must stick to a set of guidelines. This ensures that you are not leaving out anything you should know on the subject. Freecodecamp is a non-profile organization that has the best and well-structured curriculum which can help you learn JavaScript. You can start with any of their courses and continue it till the end. Write Complex Code in Plain Language First Write a piece of code in plain language first though it's going to be complicated or unfamiliar. You'll be able to figure out what you want the code to accomplish before writing it. Learn How to Google This is one of the effective tips that can help you solve many of your questions. if you spend years upon years following tutorials either by watching videos or reading guides, you will still come across problems if you are working on projects. Your buddies are Google and Stack Overflow. However, you should always start with Google to discover what possibilities are available to you. You'll be surprised at how much knowledge you can pick up this way. Before one week, I have written an article on \"How to use Google like a Pro\", which I think, it might be helpful for you If you want to learn tips on how to use Google. Start Your Own Projects If you dont put your hard-earned knowledge into practice, what was the point of learning it in the first place? When you're ready to put your JavaScript abilities to work on a real project, rather than beginning from scratch, consider adding a feature to a program you made in a lesson. If you require assistance, consider collaborating on a project with a friend. Set a goal for yourself and decide what you want to study. JavaScript has a lot of different branches. For this, it's best if you pick one technology and ignore the rest. However, if you are just getting started, making this option will be hard because it is difficult to know where to begin. You'll need to follow a well-structured curriculum in this situation. JavaScript is used for both Frontend and Backend. It means that there is a lot of frameworks for you to learn so in order not to get overwhelmed and bored easily, you should only focus on one thing and leave out all other things outside of that. This doesn't mean that you need to learn only one JavaScript framework, You need to learn as much as you need but focus on one framework before starting the other one. Conclusion I hope you found this article helpful. If you need any help please let me know in the comment section. Would you like to buy me a coffee, You can do it here. Let's connect on Twitter and LinkedIn. Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08934b72e199dda6040f8",
        "title": "An Ultimate Guide To Gatsby - Everything You Need To Know Before Starting with Gatsby",
        "content": "sby Gatsby websites are getting popular day by day. Nowadays most of the popular websites use Gatsby because of its speed, SEO and etc, and if you don't know anything about Gatsby, It is probably worth learning it in . What is Gatsby? GatsbyJS is a React-based, GraphQL powered static site generator. Gatsby is an open-source framework that combines functionality from React, GraphQL, and Webpack into a single tool for building static websites and apps. Although the term \"static site generator\" has been around for a while, Gatsby is more akin to a modern front-end framework than a traditional static site generator. What are Static Sites? Static websites have existed for a long time. They're most likely the initial website, with only HTML, CSS, and JavaScript. They aren't rendered in real-time because there isn't any server-side programming, no database, and so on. A static site generator is a tool that creates static web pages. JS frameworks and libraries, on the other hand, typically produce HTML content on the client-side during runtime. This material is generated by static site generators while the site is being built. Then, after it's loaded, React takes over, and you've got yourself a single-page app! Why you should consider using Gatsby? SEO The use of GatsbyJs allows your websites to make use of several of the internal code's optimization strategies. As a result, search engines will rank your website higher. There are a number of plugins that can assist you with this. Plugins Gatsby has some amazing plugins which can help your website in different aspects. You can install these plugins using NPM or Yarn. Some of the popular plugins are Source File-System, Contentful, Plugin Sharp and etc. You can find all plugins on their official website here. Speed Gatsby sites are much faster than many of the alternatives, even compared to cached sites using WordPress and things like that because that static site is really hard to beat in terms of its speed and performance. Templates There are enough GatsbyJs Starter repositories and templates available that cloning and altering the content is straightforward. This allows you to quickly and efficiently construct websites such as your blog or your portfolio. Why should you avoid Gatsby? Build Time As the amount of content on your website grows, so does the time it takes to produce it. This is not only inconvenient during development, but it also wastes time when it comes to deployment. Gatsby is not advised if you want to create a site that changes frequently. Dynamic Websites Sites with a lot of dynamically produced routes, because you won't be able to reap the benefits of statically generated pages if you don't know what they are at the time of construction. Complex sites Because complex sites expand quickly and take a long time to build, they are continuously adding new pages and material. Although many e-commerce companies can and do employ statically created sites, if build time becomes an issue, it is most likely time to abandon them in favor of dynamically generated sites like Gatsby. Set Up Your First Gatsby Website Installing Gatsby CLI The first step is to install Gatsby CLI, You can create and modify a new site using the Gatsby command-line interface. To install Gatsby CLI, simply run :  The `-g` argument indicates that the Gatsby command-line interface is being installed globally rather than locally. As a result, you'll be able to utilize the tool in any directory. Starter Templates As I mentioned previously that you don't need to create a website from scratch, instead we can use some starter templates which can be found on Gatsby's official website. For this tutorial, we will use `gatsby-starter-default` to do that, run the below command on your terminal.  `gatsby new` creates a new website. You'll get a barebones site if you utilize gatsby new on its own. Combining gatsby new with a starter template is the most typical approach to use it. Run your app locally Once it is done, you should see a message that Gatsby site has been successfully bootstrapped. Now run  This command with navigate to our new gatsby folder and initialize files, so that we can view it locally. Open your browser and navigate to `http://localhost:/`, You should see a default stater page, just like image below. !Gatsby Default Template It's critical to arrange your website's metadata correctly if you want a search engine to find your website. The gatsby-config.js file allows you to customize your website's data. In order to make your website accessible for everybody around the globe, you need to deploy your website in a hosting service. You can deploy a Gatsby website to Netfliy, Vercel, Azure, Gatsby Cloud, Heroku, AWS, IIS, Firebase and etc. But for this example, we will use Netlify Deploying Website To Netlify Before deploying our website, first, we need to generate a build folder that contains static files. To do that run  Once it is completed, You should see a folder named `public`. That is it, We need only that folder to deploy in Netlify. Go to Netlify website and if you don't have an account, click on the signup button and create an account. Don't worry, Netfliy is free hosting and it won't charge you anything. Once you registered, you should be redirected to Netfliy dashboard, which will look like this. !Netlify Dashboard Now click on sites on the Netlify menu, and you should see a page with a text \"Want to deploy a new site without connecting to Git? Drag and drop your site output folder here\" . Drag and drop your public folder on that placeholder, Wait for a while and then your website will be deployed on Netfliy. If it is deployed successfully you should see something similar to the below image. !Netlify Dashboard Conclusion I hope you found this article helpful. If you need any help please let me know in the comment section. Would you like to buy me a coffee, You can do it here. Let's connect on Twitter and LinkedIn. Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08934b72e199dda6040fa",
        "title": "Top  Visual Studio Code Extensions That Every Developer Should Use It",
        "content": "se It Visual Studio Code is by far one of the most popular code editors for web, mobile, and hardware developers. More than ,, people use VS Code every month, up by over % in the last year. In this guide, well explore the top VS Code extensions that every developer should know in . Bracket Pair Colorizer If you are working on big projects where functions and components become very complicated, bracket pair colorizer is the one who can help you This extension allows matching brackets to be identified with colors. The user can define which characters to match, and which colors to use. It is one of the must-have extensions for all developers. Link : https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer !Bracket Pair Colorizer Auto Rename Tag For web developers, Auto Rename Tag is a fantastic VS Code extension. Auto Rename Tag, as the name implies, renames the second tag as the first is updated, and vice versa. Link : https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag !Auto Rename Tag Better Comments Having descriptive comments can save a lot of time for you and your team. The Better Comments extension will help you create more human-friendly comments in your code. With this extension, you will be able to categorize your annotations into : - Alerts - Queries - TODOs Highlights - Commented out code can also be styled to make it clear the code shouldn't be there - Any other comment styles you'd like can be specified in the settings Link: https://marketplace.visualstudio.com/items?itemName=aaron-bond.better-comments !Better Comments Stack Overflow View After installing this extension you don't need to go Stack Overflow website again, you can get all your answers in VS Code. It is a Visual Studio Code extension for access to Stack Overflow inside of the editor. It supports English, Spanish, Russian, Portuguese, Japanese. Link: https://marketplace.visualstudio.com/items?itemName=tron.stack-overflow-view !Stack Overflow View Prettier Prettier is an opinionated code formatter. It enforces a consistent style by parsing your code and re-printing it with its own rules that take the maximum line length into account, wrapping code when necessary. It supports JavaScript, TypeScript, Flow, JSX, JSON, CSS, SCSS, LessHTML, Vue, Angular GraphQL, Markdown, YAML and etc. Link: https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode !Prettier Code Spell Checker A simple source code spell checker for multiple programming languages. A basic spell checker that works well with camelCase code. The goal of this spell checker is to help catch common spelling errors while keeping the number of false positives low. Link: https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker !Kidultsports-Admin-main-.gif Thunder Client Thunder Client is a lightweight Rest API Client Extension for Visual Studio Code, hand-crafted by Ranga Vadhineni with a simple and clean design. Link: https://marketplace.visualstudio.com/items?itemName=rangav.vscode-thunder-client !Kidultsports-Admin-main-.gif Settings Sync Instead of specifying your settings each time, you can save them in the editor and restore them on a new system with this plugin. This is important for customizing the development environment in the editors. Link: https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync !Kidultsports-Admin-main-.gif Import Cost Import Cost is a VS Code addon that estimates the size of an import package in your code. It's critical not to jeopardize the user experience by importing large packages when working on a project. Link: https://marketplace.visualstudio.com/items?itemName=wix.vscode-import-cost !Kidultsports-Admin-main-.gif Live Share Visual Studio Live Share enables you to collaboratively edit and debug with others in real-time, regardless of what programming languages you're using or app types you're building. It allows you to instantly (and securely) share your current project, and then as needed, share debugging sessions, terminal instances, localhost web apps, voice calls, and more. Link: https://marketplace.visualstudio.com/items?itemName=MS-vsliveshare.vsliveshare !screely-.png Conclusion I hope youre eager to use these amazing VS Code Extensions to develop your application. If you need any help please let me know in the comment section. Would you like to buy me a coffee, You can do it here. Let's connect on Twitter and LinkedIn. Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08934b72e199dda6040fc",
        "title": "Add An Advanced File Uploader To Your React.js App - Uploadcare",
        "content": "are Overview In this article, we are going to integrate Uploadcare ( An Advanced File Uploader ) which includes drag-and-drop image uploader, direct link image uploader and etc.. in our react.js app. Creating a react app The first step is to create a simple react app which you can do just by running the command below in your terminal.  This might take a while and it depends on your computer specs but once it is done go to the new directory which is created ( In our case `upload-care` ) and run `npm start` or `yarn start`. This command will start the development server for your react app. Now open this directory (In our case `upload-care`) in any code editor Cleaning up the project Once you opened the directory in your code editor, You can see that there are many files and folders, but for this project, we don't need most of them. Let's go ahead and delete the files which we don't need. In the `src` folder delete all files except `App.js`, `Index.js`, and `App.css`. Once you removed them, delete everything which is inside of `App.js` and paste the below code instead.  also delete everything which is inside of `Index.js` and paste the below code instead.  and also delete everything inside of `App.css`. Now in the `public` folder delete everything except `index.html`. Delete everything which is inside of the `index.html` and instead paste the below code  Finally, this is how your folder structure should look like  Getting an API key Signup for an account in Uploadcare's website and click on API Keys from the sidebar !screely-.png Copy your public key as we need it in further steps. Installing and Adding Uploadcare Now It is time to install Uploadcare in the react application, to do that simply run  Once it is installed, you need to import the package into your app.js, to do that simply add this code to the top of your app.js code  To use the File Uploader component, you can add the below code to your app.js or another template of your choice:  finally, this is how your `app.js` should look like.  Now, paste your public key in place of `YOUR_PUBILC_KEY` in the above code. Open your browser and go to `localhost:`. and now you have Uploadcare integrated into your app. If anyone uploads a file using the Uploadcare widget, You can view those files in your dashboard. !screely-.png Conclusion I hope you found this article useful, if you need any help please let me know in the comment section. You can find the complete source code here Would you like to buy me a coffee, You can do it here. Let's connect on Twitter and LinkedIn. Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08934b72e199dda6040fe",
        "title": "Ways to Host Your React JS App For Free",
        "content": "Free Deploying an application created with a framework like React, Vue, or Angular differs significantly from deploying a website built with HTML, CSS, and JavaScript. Choosing a hosting provider for your app is very important, as your website performance depends on it. Here are some popular and free hosting services, that you can use to deploy your react app. Netlify It's the one I utilize for the majority of my projects. Netlify is a fantastic web development tool that is designed to help you increase your productivity as much as possible. Developers can use the platform to create, test, and deploy websites. Netlify is an incredibly rapid solution to assure that websites and apps are considerably more performant, scalable, and secure. !Netlify Vercel Vercel is a static site and frontend framework platform designed to interact with headless content, commerce, and databases. Vercel hosts my personal blog (blog.suhailkakar.com). Every Vercel personal account is a hobby account. Hobby accounts are free for life and can only be used for personal, non-commercial purposes. !Vercel Firebase Hosting Firebase is a Google product that provides completely managed hosting for static and dynamic content, as well as microservices. SSD storage and a worldwide CDN are used to support the service. !Firebase GitHub Pages For beginners, GitHub Pages is one of the quickest and most extensively utilized techniques for deploying websites. It's easy to maintain than many of the other tools mentioned in this article. You may use GitHub actions to automate deployments, configure CI/CD, and much more. If you don't know about GitHub Actions, @Victoria Lo has created an awesome series for beginners, I am sure you will find it useful. !GitHub Pages Surge Surge is a cloud platform for hosting static websites that is relatively easy to use while also providing customization possibilities for those that require them. Their free tier allows for unlimited publishing, bespoke domains, and basic SSL, with more options available through their professional plan. !screely-.png Heroku Heroku is a cloud service platform that has been increasingly popular in recent years. Because Heroku is so simple to use, it's a popular choice for many development projects. It offers straightforward application creation and deployment, with a specific focus on customer-focused solutions. !screely-.png Conclusion I hope you found this article useful, if you need any help please let me know in the comment section. Would you like to buy me a coffee, You can do it here. Let's connect on Twitter and LinkedIn. Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08934b72e199dda604100",
        "title": "+ Projects You Can Do to Become a Frontend Master",
        "content": "aster Learning to code can be challenging and perplexing, especially if you don't know where to begin. The greatest approach to improve your programming abilities is to use them to create coding projects. Here are the finest programming projects to boost your confidence and make you a better developer, whether you're a novice or returning to coding. I've also mentioned the technologies that can be used in each project, but feel free to use any of your favorite programming languages or frameworks. Calculator app !beaaecaee.jpg The program that we all use on a daily basis is the calculator. The calculator is a project that is both simple and practical. As a reference, you can view Adeola Adeoti's calculator app, the source code of his app can be found here. What you will learn Creating a calculator app can help you learn, how to build reusable components, how to use props, and how to handle states. Tech Stack - Vue JS - Tailwind CSS Features - Beautiful UI - Dark mode / Light mode - Responsive Blog Website !cddafcbbddebefcc.webp Building your own blog doesn't only improve your coding skill, but your online presence too. If you have a blog and share content regularly, you can get a lot of visitors which can increase your online presence. What you will learn After creating a blog from scratch, you will learn about styled-components, routing in Next JS, implementing MDX, and using dynamic routes Tech Stack - Next.js - React.js - Styled Components - MDX Features - Responsive - Dark mode / Light mode Weather App !aecaefcbaeaca.webp Having a fully-featured weather app in your portfolio can help you a lot to get clients. And if you deploy this app, not only you but many people may get benefit from it. What you will learn After creating a weather app, you will learn about fetching data from API, posting data to API, mapping data, and creating dynamic pages. Tech Stack - React.js - Tailwind CSS - Axios Features - Responsive - days Forecast - Beautiful UI Spotify . !afabecabfcbec.webp You can create Spotify ., your own Spotify version. You can add as many features as you can and after completing, you can deploy it online :) What you will learn Creating your own Spotify version can help you learn, how to fetch data from API, how to handle dynamic routes, how to handle authentication and etc. Tech Stack - Next JS - Tailwind CSS - Axios - Auth Features - Responsive - Light mode / Dark mode - Beautiful UI - Authentication - Use profile - Showing lyrics of a song Movies App !cedfadacd.webp You can create a movies app from scratch where you need to show movie details, posters, trailers, and cast. I believe that you will enjoy building this project. What you will learn Creating a movie app can help you learn, how to create a reusable component, how to fetch data from api, how to create dynamic pages. Tech Stack - Vue JS - Styled Component - Axios - TMDB API Features - Responsive - Light mode / Dark mode - Beautiful UI - Show movie ratings - Show movie casts/trailer - Show movies based on genre Youtube UI Clone !bcfbbbcfdca.webp If you want to learn about grids, flexbox, and handling states then it would be better if you clone the YouTube UI. You don't need to % do the same as youtube, you have the freedom to redesign and create your own version of YouTube. What you will learn Creating a YouTube UI clone can help you learn about grids, flexbox, handling states, and responsiveness. Tech Stack - Svelte - SMUI (Svelte Material UI) Features - Responsive - Beautiful UI Chat App !ccecdaaacebdec.webp If you want to learn about Firebase, Firestore, Real-time database and etc. This project is for you, having this project in your portfolio can make your portfolio strong. What you will learn Creating a Chat app can help you learn about firebase, authentication, firebase real-time DB and etc. Tech Stack - React.js - Firebase - Material UI Features - Responsive - Real time chat - Dark mode / Light mode SaaS landing page !dafceddcfcecbc.webp Creating a landing page can help you a lot in order to improve your frontend skills. What you will learn Developing a landing page for Saas can help you improve your skills in grids, flexboxes, and responsiveness. Tech Stack - Vue - Styled Component Features - Responsive - Beautiful UI Task management app !fbdffbfddec.webp This project could take some time, but it is worth it. You can create a task management website that contains just todos, calendar, and some docs What you will learn Creating a task management app can help you learn about states, markdown, local storage, and authentication. Tech Stack - Next.js - Tailwind CSS - Auth - Markdown Features - Responsive - Adding Todos - Creating Wikis ( using markdown ) eCommerce website UI !dcbeccfebffdd.webp Another awesome project that you can do to improve your frontend skill is developing the UI of an Ecommerce website. What you will learn After developing the UI of an eCommerce website you will learn about, reuseable components, managing states, and using props Tech Stack - Svelte - Sveltestrap Features - Responsive - Beautiful UI Admin Dashboard !cacdbbccedfaed.webp The last one on our list is the admin dashboard. Admin dashboard or Admin panel is a place where the admin/owner of the website manages his/her website. Creating the UI of an Admin Panel can help you to improve your frontend skills What you will learn After developing an admin dashboard, you will learn about creating many types of components, reuse them in the proper place and making a page responsive. Tech Stack - React.js - SCSS - React Bootstrap Features - Responsive - Beautiful UI - Light mode / Dark mode Conclusion I hope you found this article useful, if you need any help please let me know in the comment section. Would you like to buy me a coffee, You can do it here. Let's connect on Twitter and LinkedIn. Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08934b72e199dda604102",
        "title": "Top Free React Dashboards to Use for Your Next Project",
        "content": "ect It is not necessary to spend a lot of money to create a professional-looking dashboard for your website or app. That's why, in this post, we will look at some of the great react admin panels that you can utilize in your next project. This selection of the top free admin templates will assist you in launching your project with a minimal financial commitment. CoreUI !screely-.png CoreUI is meant to be the UX game changer. Pure & transparent code is devoid of redundant components, so the app is light enough to offer the ultimate user experience. Download / Live Demo Black !screely-.png Black Dashboard React is a beautiful Bootstrap , Reacstrap and React (create-react-app) Admin Dashboard with a huge number of components built to fit together and look amazing. If you are looking for a tool to manage and visualize data about your business, this dashboard is the thing for you. Download / Live Demo Datta Able !screely-.png Datta Able React Free Admin Template made using Bootstrap framework. Datta Able React Free Admin Template comes with a variety of components like Button, Badges, Tabs, Breadcrumb, Icons, Form elements, Table, Charts & Authentication pages. Download / Live Demo Corona !screely-.png Corona Admin is a free responsive admin template built with Bootstrap . The template has a colorful, attractive yet simple, and elegant design. The template is well crafted, with all the components neatly and carefully designed and arranged within the template. Download / Live Demo Matx !screely-.png MatX is a full-featured React Material Design Admin Dashboard template. MatX is built with React, Redux & Material UIWe implemented all the features you might need to start a new Web application. The free version includes all Material UI components, Form elements, and validation, JWT authentication, Sign in, sign up pages, Vertical navigation, Lazy loading, Code splitting, SASS integration. Download / Live Demo Light Blue !screely-.png Light Blue React Template is a great template to quick-start the development of SAAS, CMS, IoT Dashboard, E-Commerce apps, etc. It is a free and open-source admin dashboard template built with React and Bootstrap . Download / Live Demo Shards Lite !screely-.png Shards Lite is a free React dashboard template that includes a modern design system as well as a variety of configurable layouts and components. Download / Live Demo Notus React !screely-.png Notus React is Free and Open Source. It features multiple HTML and React elements and it comes with dynamic components for React. It is based on Tailwind Starter Kit by Creative Tim, and it is built with both presentation pages, and pages for an admin dashboard. Download / Live Demo Berry !screely-.png Berry is a creative free react admin template build using the Material-UI. It is meant to be the best User Experience with highly customizable feature-riched pages. It is a complete game-changer React Dashboard Template with an easy and intuitive responsive design as on retina screens or laptops. Download / Live Demo Conclusion I hope you found this article useful, if you need any help please let me know in the comment section. Would you like to buy me a coffee, You can do it here. Let's connect on Twitter and LinkedIn. Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08935b72e199dda604104",
        "title": "A Complete Beginner's Guide to Web .",
        "content": "b . You've probably heard about Web unless you've been living under a rock. Web . is the next step in the web's growth, and it aims to make the internet more intelligent. Before learning more about Web, let's understand the evolution of the web first. Over the last few years, the World Wide Web has developed, bringing with it new tools and strategies. Web ., ., and . are typical names for these stages. Now let's understand each of their stags. Web . It is the first stage in the evolution of the web, which is also referred as the read-only web. Web . websites were not as dynamic and interactive as it is now. The primary goal of the websites was to make the information available to the general public. As servers were improved, average connection speeds rose, and developers gained new skills and techniques, the shift from Web . to . took occurred over time. Web . It is the second stage in the evolution of the web, which is also referred as the read-write web. It's just a better version of the first worldwide web, marked by the shift from static to dynamic or user-generated content, as well as the rise of social media. Some of the famous Web . applications are Google Maps, Facebook, Twitter, YouTube, WordPress and etc. Web technologies such as HTML, CSS, and Javascript frameworks such as ReactJs, AngularJs, VueJs, and others enable users to come up with new concepts, allowing users to contribute more to this Social Web. !Blue-and-White-Mind-Map-Presentation-.png Now that you have a good understanding of the evolution of the web and its old stages, Let's understand, What is hell is this Web .. Web . It is the third stage in the evolution of the web, which is also referred as the read-write-execute which refers to the future of the web. In this era, artificial Intelligence and Machine Learning enable computers to understand data in the same way that people do. Web applications or DApps, are developed on decentralized peer-to-peer networks like Ethereum and IPFS. These networks are developed, operated, and maintained by their users, rather than by a business. They self-organize and don't have a single point of failure. You'll notice that when you hear about Web, cryptocurrencies are frequently mentioned. This is due to the fact that many of these protocols include cryptocurrencies. Anyone who wishes to help create, control, or improve one of the projects is given a cash incentive (tokens). These protocols frequently provide a wide range of services, including computation, storage, bandwidth, identification, hosting, and other online services previously supplied by cloud providers. What makes Web . so unique? Web 's major benefit is that it seeks to solve the most serious issue that has arisen as a result of Web : the gathering of personal data by private networks, which is subsequently sold to marketers or potentially stolen by hackers. Web 's network is decentralized, meaning it is not controlled by a single organization, and the decentralized applications (apps) created on top of it are open. Properties of Web . The following are three key characteristics that can help us define Web .: Semantic Web One of the key elements of Web . is semantic web.. The semantic web enhances online technologies by allowing users to create, share, and connect content via search and analysis based on the ability to understand the meaning of words rather than keywords or numbers. D Graphics D Graphics is being used widely in websites and services in Web . such as online games, e-commerce, and portfolio website. Here is the best example of a d website by Bruno Simon. Artificial Intelligence Semantic Web and Artificial Intelligence are the two cornerstones of web .. By combining this capacity with natural language processing, Web . allows computers to comprehend material in the same way that people do, resulting in quicker and more relevant results. To meet the demands of users, they grow increasingly intelligent. What is Web.js The Web.js library is the primary JavaScript library you'll use while creating Web applications. web.js is a set of libraries that let you use an HTTP or IPC connection to communicate with a local or distant ethereum node. The Ethereum blockchain is accessed with the web JavaScript library. It can access user accounts, send transactions, and communicate with smart contracts, among other things. In fact, Web.js is one of the main frameworks used in designing dApps. Conclusion That is it for this article. I hope you found this article useful, if you need any help please let me know in the comment section. Would you like to buy me a coffee, You can do it here. Let's connect on Twitter and LinkedIn. Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08935b72e199dda604106",
        "title": "A Complete Beginner's Guide to Solidity",
        "content": "ity Solidity is an object-oriented, high-level programming language for creating smart contracts on the blockchain that automate transactions. The language was created by participants to the Ethereum project when it was proposed in . This language is mostly used to make smart contracts on the Ethereum blockchain. According to its documentation, \"Solidity is a curly-bracket language. It is influenced by C++, Python, and JavaScript, and is designed to target the Ethereum Virtual Machine (EVM).\" Solidity is also considered a dialect of JavaScript. This implies that if you know JavaScript, learning Solidity should be simple. Before learning more about solidity let's understand some basic terms of blockchain. Ethereum Virtual Machine The Ethereum Virtual Machine (EVM) is the Ethereum smart contract runtime environment. The Ethereum Virtual Machine is focused on providing security and allowing machines all around the world to execute programs. Virtual machines effectively create a layer of abstraction between the code and the machine that executes it. It is required to promote software portability and to ensure that programs are isolated from one another and from their host. The Ethereum Virtual Machine was created to serve as a runtime environment for Ethereum-based smart contracts. !Solidity ().png Smart Contract A smart contract is a decentralized program that responds to events by executing business logic. The exchange of money, delivery of services, unlocking of information controlled by digital rights management, and other forms of data manipulation, such as altering the name on a property title, are all possible outcomes of smart contract execution. Smart contracts are often written in Solidity. Smart contract languages like Solidity cannot be directly executed by the Ethereum Virtual Machine. They are instead converted to low-level machine instructions called opcodes. Now that you have an idea about EVM and Smart Contract, we can continue learning about the Solidity Environment Setup Before installing Solidity, you need to make sure that you have Node.js and NPM installed on your computer. To install node.js in your Linux (Ubuntu) you can follow this article. Once you have successfully installed Node.js and NPM in your machine, you can proceed to install Solidity compiler as below:  The command above will install the Solcjs and make it available globally throughout the system. Now you can run  If everything goes fine, you see something similar to below in your terminal  Reserved Keywords Following are the reserved keywords in Solidity: abstract after alias apply auto case catch copyof default define final immutable implements in inline let macro match mutable null of override partial promise reference relocatable sealed sizeof static supports switch try typedef typeof unchecked Importing other files in Solidity Importing a file in Solidity is similar to JavaScript, to import a file you can simply write  All global symbols from the \"file\" are imported into the current global scope by the above statement. But if you want to create a new global symbol someName with all the global symbols from \"file\" as members, you can write  Comments in Solidity Just like other programming languages, Solidity support both single-line and multi-line comments. - Start the line with `//` to include a single-line comment. - Start with `/` and end with `/` to include a multi-line comment.   Variables in Solidity There are mainly two types of variables available in Solidity. - Local Variables: Variables with values that will persist till the function is completed - State Variables: Variables whose values are kept in a contract storage system permanently State variable State variables store the value permanently in the contract storage. Each method should have its own scope, and state variables should be declared outside of any defined functions. !State variable.png Local Variable A local variable's context is contained within the function, and it cannot be retrieved from outside of it. These variables are typically used to store temporary values. !Local variable.png Operators in Solidity Operators are important in every programming language because they establish the groundwork for the programming. Similarly, the functionality of Solidity is also incomplete without the use of operators. Solidity supports the following types of operators: - Arithmetic Operators - Relational Operators - Logical Operators - Bitwise Operators - Assignment operators - Conditional Operators However in this article we are going to study only of them but in future article I will try to explain all of them :) Arithmetic Operators These operators are used to perform mathematical operations. OperatorDenotationDescriptionAddition+Used to add two operandsSubtractionUsed to subtract the second operand from firstMultiplicationUsed to multiply both operandsDivision/Used to divide numerator by denominatorModulus%Gives the remainder after integer divisionIncrement++Increases the integer value by oneDecrementDecreases the integer value by one Relational Operators These operators are used to compare two values OperatorDenotationDescriptionEqual==Checks if two values are equal or not, returns true if equals, and vice-versaNot Equal!=Checks if two values are equal or not, returns true if not equals, and vice-versaGreater than&gt;Checks if left value is greater than right or not, returns true if greater, and vice-versaLess than&lt;Checks if left value is less than right or not, returns true if less, and vice-versaGreater than or Equal to&gt;=Checks if left value is greater and equal than right or not, returns true if greater and equal, and vice-versaLess than or Equal to&lt;=Checks if left value is less than right or not, returns true if less and equals, and vice-versa Logical Operators These operators are used to combine two or more conditions OperatorDenotationDescriptionLogical AND&amp;&amp;Returns true if both conditions are true and false if one or both conditions are falseLogical OR||Returns true if one or both conditions are true and false when both are falseLogical NOT!Returns true if the condition is not satisfied else false This is just part of Web . however in the future we will discuss more about the solidity. Conclusion That is it for this article. I hope you found this article useful, if you need any help please let me know in the comment section. Would you like to buy me a coffee, You can do it here. Let's connect on Twitter and LinkedIn. Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08935b72e199dda604108",
        "title": "A Complete Beginner's Guide to Docker",
        "content": "ker Docker is an open-source platform that allows us to create, deploy, and manage containerized applications. In this article, we will learn more about Docker, its advantages, installation, and how to dockerize a Node.js app. So let's begin with What is Docker. What is Docker Docker is a container management service. Docker's entire purpose is to make it simple for developers to create apps, ship them into containers, and then deploy them wherever they want. Now let's discuss what are containers. Containers are a solution to the challenge of moving software from one computing environment to another and having it operate consistently. This might be from a developer's laptop to a test environment, or from a real data center computer to a virtual machine in a private or public cloud. A container is a whole runtime environment packaged into one package: a program, together with all of its dependencies, libraries, and other components, and configuration files needed to run it. Now that you have some knowledge about Docker and Containers, let understand why should we use Docker. Benefits of Using Docker Before installing docker and dockerizing an application let's first understand what are the advantages of Docker. Running applications in containers brings a number of benefits such as Performance Docker containers are usually fast and less resource-intensive than virtual machines because containers do not contain an operating system whereas virtual machines do. Scalability You can quickly create new containers if demand for your applications requires them. When using multiple containers you can take advantage of a range of container management options. Rapid Deployment Docker manages to reduce deployment to seconds. This is because it generates a container for each process and does not boot an operating system. CI Efficiency Docker allows you to create a container image and utilize it throughout the whole deployment process. The ability to isolate non-dependent stages and perform them in parallel is a major advantage. Now lets learn the facts about Docker that you might don't know :) Docker Facts - Docker adoption is up % in the last year. - PHP, Ruby, Java, and Node are the main programming frameworks/languages used in containers. - / of organizations that try Docker end up utilizing it. The majority of firms who will adapt did so within days of first production use, and virtually all of the remaining adopters converted within days. - Docker offers a large library of pre-built images. At the time of writing, there are over , public Docker images available on the web. Installation of docker Mac If you are using Mac with Apple silicon you must install Rosetta , to do that simply run the below command in your terminal.  Visit this link and select your mac chip, Click on the blue button with your mac chip label on it. Once you did a DMG file will be downloaded, double click on it, and you need to drag the docker logo into Applications folder !Screenshot -- at ...png Once it is copied, you will be able to access docker from the Applications folder. !Screenshot -- at ...png Linux To install Docker in Linux you can simply run the below command in your terminal, this would install everything related to docker in your Linux machine.  Dockerizing a node.js app Dockerizing is the process of packing, deploying, and running applications using Docker containers. In this article, we are going to dockerize a node.js application, but before starting it, If you are using VS Code, It is better to install Docker extension. !Screenshot -- at ...png Environment Setup In this article, I am going to create a simple node.js application that send a get request, but if you want, you can also continue dockerizing your current application throughout this article. To create a node.js app from scratch, you just need to run  Once you complete it, a `package.json` file will be generated. Now you can create a new file named `app.js` and this is going to be the file where we will be dockerizing it. To send/get the http request we need to set up express too, so also need to install express.js. To do that simply run  and once it is done, you can create a simple GET request. Here is the code for it :) ```js const express = require(\"express\"); const app = express(); app.get(\"/\", (req, res) => { res.send({ message: \"Hey, server is running :D\", }); }); const port = process.env.PORT || ; app.listen(port, () => { console.log(`Server is running on port ${port}`); }); ``` You can run this app by running `node app.js` and your server will start on port . You can open your browser and go to localhost: in which your app is running and you will see similar output ( below image ). !Screenshot -- at ...png Now that we have our basic node.js app setup, let's start learning about Dockerfile. Dockerfile A Dockerfile is a text file that contains all of the commands that a user may use to construct an image from the command line. !Dockerfile.png Now, go ahead and create a Dockerfile inside of your project directory. The first thing we need to do is define from what image we want to build from. Copy the below code and paste it into your dockerfile. Don't worry I am going to explain each line :)  In the above code - FROM initializes a new build stage and sets the Base Image for subsequent instructions - WORKDIR is used to set the working directory for all the subsequent instructions - COPY let you copy files from a specific location into a Docker image - RUN allows you to install your application and packages required for it - EXPOSE is a way to keep track of which ports are in use, but it does not map or open any ports. - CMD  specifies the instruction that is to be executed when a Docker container starts We now have a full set of instructions to build a docker image, Let's build it :) Docker Image To build a docker image, we have to use below build command  which in our case will be  After the completion of this process, a docker image will be created. To see all your docker images, run the following command in your terminal  Docker Containers Now that we have your docker images, we can use them as a base image to create other images or we can use it to run containers. Usually, we use this image to push it to a container registry that might be docker hub or any cloud provider. But in this article are going to push our image to docker hub. To do that simply run  If you got an access denied error, then you need to login into your docker hub account, to do that run  and enter your email and password in your terminal. Once you push your image to the docker hub you can access them in your docker hub profile. Conclusion That is it for this article. I hope you found this article useful, if you need any help please let me know in the comment section. You can find the source code on my Github repository here . Would you like to buy me a coffee, You can do it here. Let's connect on Twitter and LinkedIn. Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08935b72e199dda60410a",
        "title": "How I use ClickUp to efficiently organize my day",
        "content": "day We all deal with projects, whether we're project managers, members of project teams, or regular developers. If you work in the corporate world, you know how easily large projects may get disorganized, but not anymore, in this article, I am going to describe how I use ClickUp to efficiently organize my day. What is ClickUp ClickUp is a powerful project management tool for both teams and individuals. It combines important business applications and centralizes company information into a single online solution. How I use ClickUp There are numerous reasons why I use ClickUp in my everyday life; nevertheless, I will highlight a few of them in this article. Spaces Spaces break down your workspaces into different departments, teams, groups, high-level initiatives, or really anything you want to group at a high level. For example, if you create a Workspace to manage your Social Media presence, you can use Spaces to organize your Facebook post, Twitter tweets, Linkedin job posting and etc. !screely-.png The second level of the ClickUp hierarchy is Spaces, which allows you to personalize anything. Usually, this is the ClickUp hierarchy  Tasks This is the feature that I use to organize my blog article and Twitter threads/tweets. Each task can have a status, priority, and lots of other stuff. You can also add a subtask to each task. !screely-.png Wikis This is the place, where I draft my article and write my tweets/threads. It has a WYSIWYG - Markdown editor. I use this tool daily in order to draft my article and after some review, I will publish it on Hashnode. You can also publish your wiki/doc directly from ClickUp and it will give you a shareable link. Pretty cool haaa... !screely-.png Embed To be frank, this feature is very handy when you write wikis based on some Figma designs, you can just switch to another tab from ClickUp itself. Not only Figma but also any HTML code / URL which you need to embed it. !screely-.png Mindmap The simplest method to plan, organize, and visualize your thoughts and ideas is to use mind mapping. And I'm sure you've seen mind maps at some point in your life. A mind map is a hierarchical graphic centered on a single idea. It arranges data in a non-linear manner, making it easier to see and comprehend any topic. In the below example, I used the Mind mapping feature to organize them. !screely-.png ClickApps Last but not least, ClickApps enable you to completely customize your team's / personal experience within each Workspace. You have tons of the rd party app which you can integrate with ClickUp !recording.gif Conclusion That is it for this article. I hope you found this article useful, if you need any help please let me know in the comment section. Would you like to buy me a coffee, You can do it here. Let's connect on Twitter and LinkedIn. Thanks for reading, See you next time This article is neither sponsored nor affiliated with ClickUp. This is my honest opinion about their app",
        "__v": 0
      },
      {
        "_id": "64e08935b72e199dda60410c",
        "title": "Top  Most Used AWS Services Explained",
        "content": "ained Amazon Web Services (AWS) is the most comprehensive and widely used cloud platform in the world, with over fully-featured services available from data centers all around the world. In this article, we are going to learn about most used AWS services. These services are Amazon EC EC is an Amazon cloud platform that provides safe and scalable computation capability. Its goal is to provide developers with simple access and usability for web-scale cloud computing while giving you complete control over your compute resources. !screely-.png Amazon RDS The Amazon Relational Database Service makes database management, scalability, and setup simple in the cloud. Automate time-consuming activities including hardware provisioning, database configuration, and backups in a cost-effective and proportional manner. !screely-.png Amazon Lambda Amazon Lambda allows you to run code without having to own or manage servers. You may use it to run code for almost any application or backend utility. !screely-.png Amazon CloudFront CloudFront is a content delivery network (CDN) technology that allows for the safe distribution of data, videos, applications, and APIs on a worldwide scale with minimal latency. CloudFront is easily integrated with Amazon S, Amazon EC. !screely-.png Amazon Kinesis Amazon Kinesis is used to gather, process, and analyze data in real-time, allowing you to respond more rapidly. Cost-effective processing of streaming data at scale is a key aspect of AWS Kinesis. !screely-.png Amazon SQS AWS SQS is a fully managed message queuing service for decoupling and scaling microservices, distributed systems, and serverless apps. !screely-.png Dynamo DB DynamoDB is a key-value structured document database that scales to single-digit millisecond performance. For web-scale applications, Dynamo provides built-in security with a fully managed, persistent database, backup and restore, and in-memory archiving. !screely-.png Amazon Lightsail Lightsail is a simple on-ramp for users who are new to AWS and only want virtual private servers. Lightsail has all of the capabilities necessary for a quick product launch at a low, predictable cost. !screely-.png Amazon Cloudwatch CloudWatch is a monitoring and observability solution for DevOps engineers, developers, site reliability engineers, and IT administrators. !screely-.png Amazon Cognito AWS Cognito manages a control access dashboard for onboarding users to their online and mobile apps via sign-up and sign-in capabilities. !screely-.png Amazon Inspector Inspector is an automated security evaluation tool that improves the security and compliance of AWS apps. Security audits are automated with AWS Inspector to reveal vulnerabilities, exposures, and deviations. !screely-.png Amazon Auto-scaling The AWS Auto-scaling service keeps track of your apps and adjusts capacity automatically to ensure consistent, predictable performance at the lowest feasible cost. !screely-.png Amazon Elastic Beanstalk Elastic Beanstalk is an AWS service that allows you to easily deploy and scale web applications written in Java,.NET, PHP, Python, Node.js, Ruby, Go, and Docker on Apache, Nginx, Passenger, and IIS. !screely-.png Amazon SNS Amazon SNS is a fully managed messaging service that offers low-cost infrastructure for bulk message delivery to mobile users. System-to-system or app-to-person communication across decoupled microservice apps allows users to speak directly with customers. !screely-.png Amazon VPC Amazon VPC allows you to create a somewhat isolated portion of the AWS Cloud in which you may install AWS resources in a virtual environment at scale. VPC allows you to have complete control over your environment. !screely-.png Amazon Glacier AWS Glacier services are S cloud storage classes for data caching and long-term backup that are secure, configurable, and inexpensive. These storage classes provide reliable delivery while also providing extensive security and compliance capabilities. !screely-.png Amazon EBS (Elastic Block Store) Amazon Elastic Block Store (EBS) is a high-performance block storage solution for throughput and transaction workloads of any size, at any time, that is used within Amazon EC. !screely-.png Amazon IAM AWS Identity and Access Administration enable safe resource access and management in a compliant and secure manner. !screely-.png Amazon ElastiCache ElastiCache is an Amazon Web Services (AWS) service that makes setting up, running, and scaling popular open-source in-memory data storages in the cloud a breeze. !screely-.png Amazon Sagemaker SageMaker is a full-featured management service that gives developers and data scientists the tools they need to quickly construct, train and deploy machine learning models. !screely-.png  Conclusion That is it for this article. I hope you found this article useful, if you need any help please let me know in the comment section. Would you like to buy me a coffee, You can do it here. Let's connect on Twitter and LinkedIn. Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08935b72e199dda60410e",
        "title": "What Are DApps: A Complete Guide To Decentralized Applications",
        "content": "ons What is a dApp? A decentralized app (dApp) is a digital application or a program that resides and executes on a blockchain or peer-to-peer network of computers rather than a single computer and is independent of anyone's authority's control. DApps is short for Decentralized applications which means it is not controlled by a single organization and they are playing a vital role in the world of blockchain. These decentralized applications operate on a blockchain network in a public, open-source, and decentralized environment that is free of central control and influence. Here is a great example of dApps by @Cat McGee, which she mentioned in a Twitter Space organized by Hashnode. You can create a Twitter-like dApp and deploy it on a blockchain, allowing any user to post tweets. Once they've been uploaded no one, even you (app maker) can delete those tweets. !Blue and White Mind Map Presentation ( x px).png Some dApps features are - It is open-source which means that its source code is available for common users. - When miners successfully contribute to the ecosystem, they are rewarded with tokens. - It is decentralized and adopts blockchain technology. Now that you have good knowledge about dApps, let's learn what are their benefits. Benefits of dApps DApps have many benefits, however, in this article, I have mentioned only a few of them such as No downtime There will be no downtime or restrictions as it doesn't rely on a single point of failure like a hosting server instead it runs on a peer-to-peer network of computers. Transparency Data from decentralized applications are stored on a public ledger, which keeps track of everything in a safe and transparent manner that ensures no one can tamper with it. Open-source The code of open-source dApps is available for review. Because more input can be offered, and the entire ecosystem can be more adaptable, progress faster, and evolve more safely. And yes, we all know, everything has both benefits and drawbacks, so here are a few Drawbacks of dApps Drawbacks of dApps UX/User experience It may be more difficult to create user-friendly experiences since setting up the tool stack required to communicate with the blockchain in a properly safe manner may be too difficult for the average end-user. Maintenance Because every peer in the network must update their node software, running in a complicated environment dispersed amongst peers makes maintenance, debugging, and updates more difficult. Fewer Third-Party DApps Sometimes we have to rely on third-party APIs to collect certain third-party information under the present centralized app structure. We don't have this advantage with DApps because there isn't yet a substantial third-party DApps ecosystem in place. Because DApps cannot access APIs through a centralized application, they must engage with other DApps for their API needs, which is also a drawback.  Conclusion That is it for this article. I hope you found this article useful, if you need any help please let me know in the comment section. Would you like to buy me a coffee, You can do it here. Let's connect on Twitter and LinkedIn. Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08935b72e199dda604110",
        "title": "How To Solve Captcha in JavaScript Using Captcha",
        "content": "tcha You may already solve many captchas while submitting a form or signing up for a website. The basic Captcha goal is to check whether the user is a human or a bot. Captcha stands for Completely Automated Public Turing test to tell Computers and Humans Apart. Captchas are used to stop spamming blogs, accessing bots, and making a website more secure. Sometimes it is easy to solve the captcha, however, some of them are just a headache to the users, It might take minutes to think whether the letter is in Upper Case or Lower Case. Therefore, nowadays users prefer to use captcha-solving software. Captcha is among those services, which help us solve captchas, within seconds. It is a Captcha recognition service for solving challenge-response tests called Captcha to determine whether the user is a human or not. What is Captcha Captcha is a Captcha recognition service solving captchas in real-time. It also provides image recognition services powered by human intelligence. captcha can recognize different types of captcha and Its API is available for most programming languages. As the captcha uses the human-based method to solve captchas, It provides the opportunity to earn by solving the captchas. Advantages of captcha - Provide a high level of accuracy - human-based method to solve captchas - Average speed of solving a captcha is less than sec - API available for most popular programming languages - Solve all kinds of captchas - Reliable reCAPTCHA solving service - Provide % recognition service How to solve Captcha in JavaScript using Captcha Here I use the Discord registration form which has a captcha to be solved using javascript. !screely-.png When you fill this form and click continue, you will see a captcha. In order to solve the captcha using javascript, we can use two libraries called axios and captcha. The axios is used to handle all the API calls and captcha is used to solve the captcha. install the bellow packages after creating your file.   - import these libraries to your file  - Initialize the captcha with your API key, You can get your API key when you Sign up. The API_KEY is available on your dashboard at the Account setting  - define an async function, here we call it register. we can solve the captcha using the solver which we already initialized and Hcaptcha is the type of captcha that we have on Discord website. It requires two parameters, the Site key and the website URL.  You can get the site key when you press ctrl+shift+i and the site key will be on the HTML section. !screely-.png Use try-catch, as it may have any error and inside the try, we can make the Axios call. Here the method is Post and you should specify the request URL. !screely-.png The second parameter is the data that you post to the particular website. The captcha key value will be the data that we specified earlier. I got the register form data when I filled the discord form and it sent a request. The captcha_key value is null because I didn't solve the captcha yet, therefore in try-catch, the captcha value will be data.  Here is all the code that we discussed, call your function at the end of the program.  - Run node your_file_name, in our case node app.js on the terminal. It will take a bit of time and then you will receive a token. We will use the below function to pass the token. ```js function login(token) { setInterval(() => { document.body.appendChild(document.createElement `iframe`).contentWindow.localStorage.token = `\"${token}\"` }, ); setTimeout(() => { location.reload(); }, ); } ``` Paste the above code in your console and it will log in directly to the website without solving the captcha.  Conclusion That is it for this article. I hope you found this article useful, if you need any help please let me know in the comment section. Would you like to buy me a coffee, You can do it here. Let's connect on Twitter and LinkedIn. Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08935b72e199dda604112",
        "title": "Web . Terms and Their Definitions in Plain English",
        "content": "glish You've probably heard about Web unless you've been living under a rock. Web . is the next step in the web's growth, and it aims to make the internet more intelligent. In this article, we are going to learn some commonly used Web . terms and their definition. Cryptocurrency Cryptocurrency, or crypto, is a type of digital currency that can be used as a medium of exchange. It employs encryption to safeguard and authenticate transactions, as well as to regulate the generation of new digital currency units. When you hear about Web, you'll notice that cryptocurrencies are frequently referenced. Because many of these systems involve cryptocurrency, anyone who wants to help build, manage, or improve one of the projects will receive a monetary reward (tokens). Tokens A crypto token is a virtual money. It is a tradable asset or utility that exists on its own blockchain and can be used for investment. Tokens are typically used to describe all crypto assets. Smart Contract A smart contract is a decentralized program that responds to events by executing business logic. The exchange of money, delivery of services, unlocking of information controlled by digital rights management, and other forms of data manipulation, such as altering the name on a property title, are all possible outcomes of smart contract execution. Smart contracts are often written in Solidity. Mining Mining is the process of adding transactions to the blockchain, which is a vast distributed public database of existing transactions. Mining is usually done on a separate computer because it necessitates a fast CPU, as well as more electricity and heat generation than normal computer operations. Solidity Solidity is an object-oriented, high-level programming language for creating smart contracts on the blockchain that automate transactions. According to its documentation, \"Solidity is a curly-bracket language. It is influenced by C++, Python, and JavaScript, and is designed to target the Ethereum Virtual Machine (EVM).\" Ethereum Virtual Machine The Ethereum Virtual Machine (EVM) is the Ethereum smart contract runtime environment. The Ethereum Virtual Machine is focused on providing security and allowing machines all around the world to execute programs. Solana Solana is an open-source project that implements a new permissionless, high-performance blockchain. Solana has its own native token called SOL. It can be passed to nodes in a Solana cluster in exchange for running an on-chain program or validating its output. ICOs - Initial Coin Offering Initial Coin Offerings (ICOs) are a popular financing tool for firms that want to sell products and services in the cryptocurrency and blockchain arena. Gas Fees The transaction costs that users pay to miners on a blockchain protocol to get their transaction included in the block are referred to as \"gas fees.\" Crypto Wallet A crypto wallet is a program or software that allows users to engage and interact with blockchain networks directly. Some popular are Coinbase, Exodus, and BlockFi. Etherscan Etherscan is a program that allows you to see information about any Ethereum blockchain transactions that are either pending or confirmed. Because Ethereum is a public, open blockchain, every interaction with it is documented in the transaction history, which is visible to anybody. DApp - Decentralized application A decentralized app (dApp) is a digital application or a program that resides and executes on a blockchain or peer-to-peer network of computers rather than a single computer and is independent of anyone's authority's control. NFT - Non-fungible token NFTs (non-fungible tokens) are blockchain-based tokens that each represent a unique asset such as a work of art, digital property, or media. It can be anything from music to a website domain. Consensus A consensus mechanism is any of the methods for achieving agreement, trust, and security across a decentralized computer network.  Conclusion That is it for this article. I hope you found this article useful, if you need any help please let me know in the comment section. Would you like to buy me a coffee, You can do it here. Let's connect on Twitter and LinkedIn. Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08935b72e199dda604114",
        "title": "How to Add Custom Networks To MetaMask",
        "content": "ask Introduction Metamask is a popular browser extension developed at ConsenSys that serves as an Ethereum wallet. It allows users to store Ether and other ERC- tokens while also allowing them to send funds to any Ethereum address. Because many networks aren't included by default in Metamask, in this article, I'll walk you through the process of adding them to your Metamask wallet. Adding Polygon - Matic Network to Metamask wallet We'll be adding Polygon (Matic Network) in this tutorial, but the methods are similar for various networks. Step The first step is to open your web browser and go to the Metamask plugin, then to the Network tab (left side of your profile). Here you will see all the list of Networks which is available by default on Metamask !screely-.png Step Click \"Add Network\" to enter information such as Network Name, RPC URL, and Chain ID; however, you must ensure that the information is right. !screely-.png Since we are adding Polygon, here are the information's about this Network - Network name: Polygon Mainnet - New RPC URL: https://polygon-rpc.com/ - Chain ID: - Currency Symbol: MATIC - Block Explorer URL: https://polygonscan.com/ Step If all goes well, the Polygon network's name and logo should appear in your Metamask wallet. !screely-.png Conclusion That is it for this article. I hope you found this article useful, if you need any help please let me know in the comment section. Let's connect on Twitter and LinkedIn. Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08935b72e199dda604116",
        "title": "What Are NFTs and How to Mint and Sell an NFT on Kollect Marketplace",
        "content": "ace It's , and you've undoubtedly heard of NFTs because they're everywhere from Twitter to News channels, everyone is talking about them. To put it simply, NFTs are one-of-a-kind digital assets stored on the Blockchain. We'll learn more about NFT in this article, as well as how to mint and sell your own NFT on Kollect Marketplace. What are NFTs NFTs (Non-Fungible Tokens) are tokens that can be used to indicate ownership of unique items. In other words, fungible refers to anything that may be replaced. As a result, the term \"non-fungible\" refers to something that cannot be interchanged. Cryptocurrencies and physical money are both \"fungible,\" which means they may be traded or exchanged for one another. However NFTs are different, a non-fungible token has distinct features that ensure that no two non-fungible entities are ever identical. !troop-of-bored-ape-nfts-rises-above-the-competition-bayc-donates-k-in-eth-to-orangutan-outreach-x.jpeg Images, art, music, tweets, and other easily digital files can be stored as an NFT to identify the original copy. Now that you have a good understanding of \"What is an NFT\", let's learn more about \"How to mint and sell your own NFT\" Kollect Marketplace Powered by Nervos Network, Kollect is an NFT marketplace where users can sell and buy NFTs. It's built on $CKB, a cryptocurrency similar to Bitcoin that can be used as a secure store of value. In this tutorial, we will use Kollect Marketplace to mint and sell our NFT. Register an account on Kollect The first step is to sign up for a Kollect account. To do so, go to the Kollect Website and click the register button at the top. Kollect uses unipass for authentication, thus you'll be prompted to register in a different window. !screely-.png In this next step, you need to enter you email, after you did click \"Send,\" you should receive a six-digit number in your email that you can use to validate your address. !screely-.png After this step, you will be prompted to create a password, which you must fill out, password and confirm password input, and then click Next. And with that, your account has been successfully created. Following this, the Kollect will request that you sign the message and create a pin. After you've completed all of these steps, all you have to do now is type your name into the popup, and the enrollment process will be complete. !screely-.png Uploading and Selling NFTs on Kollect You can now upload your first NFT after successfully creating your Kollect account. On the Kollect website, click the top right button and you will be redirected to a page where you can upload your NFT. !screely-.png You only need to give information about your NFT on this page, such as its name, description, image, and so on. The best part about Kollect is that it is simple and straightforward. Let's go through each step one by one to understand more about it. !screely-.png - You must upload your NFT photo in this initial stage (Kollect accepts JPG, PNG, GIF, SVG, and the maximum size is MB). Then, on the right side, enter in your NFT name, description, and kind, as well as choose a collection. !screely-.png - In the next step, you can then add an external link to your NFT and choose whether to sell it for a fixed price or at auction. If you choose fixed price, you must enter the price of your NFT and the start date; however, if you choose auction, you must provide the start and finish dates. !screely-.png Once you've finished filling out all of the fields and are ready, simply click the sale button, and your NFT will mint in to minutes. Conclusion That is it for this article. I hope you found this article useful, if you need any help please let me know in the comment section. Let's connect on Twitter and LinkedIn. Thanks for reading, See you next time",
        "__v": 0
      },
      {
        "_id": "64e08935b72e199dda604118",
        "title": "test test test test",
        "content": "est test test test",
        "__v": 0
      },
      {
        "_id": "64e08935b72e199dda60411a",
        "title": "Projects You Can Do to Become a Web and Blockchain Master - Beginner to Expert",
        "content": "Expert Learning to code can be difficult and confusing, especially if you aren't sure where to start. The greatest approach to improve your Web skills is to use them to create projects. In this article, I will be sharing projects that you can build to level up your Web and Blockchain skills, whether you're a novice or returning to coding. Before we get into the projects, let's have a look at what decentralized apps are and how they work. A decentralized app (dApp) is a digital application or program that resides and runs on a blockchain or peer-to-peer network of computers rather than a single computer and is independent of anyone's authority's control !dApp Decentralized applications, or DApps, are programs that are not controlled by a single organization and play an important role in the blockchain world. These decentralized apps run on a blockchain network in a public, open-source, and decentralized environment devoid of central control and influence. Now that you know what a dapp is, let's have a look at some of the projects you may create to improve your Web skills. ERC- Token  If you want to learn about storing videos on the IPFS, saving the hash on the blockchain, adding media players, categorizing video on the app, then it would be better to build a video-sharing app similar to YouTube. You don't need to % do the same as youtube, you have the freedom to redesign and create your own version of YouTube. I will be sharing a tutorial on how you can build a decentralized YouTube clone, so stay tuned. Meanwhile, you can check the source of it here What you will learn You will learn about storing videos on the IPFS, saving the hash on the blockchain, adding media players, categorizing video on the app. Social Media Application !bafebbfcae.png Social media applications are very cool, they allow us to interact with other people, share our moments with our friends and etc, but the problem is they have all our information from our name to our date of birth and our locations. What if you could build a social media application that just allows the user to connect their wallet and that is it, they would have the whole access to the app. I have already built an Instagram clone on Ethereum blockchain, You can find the source code here. What you will learn This is a very interesting project and you will learn about using storing post images on IPFS, using graphs for searching the post and saving the post data on the blockchain. Decentralized Web Hosting System !image_processing--omai.png Websites are hosted on servers that are capable of crashing or otherwise not working. What if with blockchain, your website doesnt require a central server? With blockchain, you can split your website content into granules and distribute it all over the internet and then link them together using a blockchain registry. What you will learn From this project, you will learn about the deployment of the web pages to blockchain and managing multiple websites. Conclusion I hope this article gave you some idea of building projects to improve your Web and Blockchain skills. It may appear challenging based on the design, but you are not required to build it in the same manner. Those images are merely examples of how your app might appear. Images are taken from Dribbble and Unsplash and credit go to their author/designer. That is it for this article. I hope you found this article useful, if you need any help please let me know in the comment section. Let's connect on Twitter and LinkedIn. Thanks for reading, See you next time",
        "__v": 0
      }
]